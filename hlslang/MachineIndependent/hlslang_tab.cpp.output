

Terminals which are not used:

   MATRIX


State 412 contains 1 shift/reduce conflict.

Grammar
rule 1    variable_identifier -> IDENTIFIER
rule 2    primary_expression -> variable_identifier
rule 3    primary_expression -> INTCONSTANT
rule 4    primary_expression -> FLOATCONSTANT
rule 5    primary_expression -> BOOLCONSTANT
rule 6    primary_expression -> LEFT_PAREN expression RIGHT_PAREN
rule 7    postfix_expression -> primary_expression
rule 8    postfix_expression -> postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
rule 9    postfix_expression -> function_call
rule 10   postfix_expression -> postfix_expression DOT FIELD_SELECTION
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   integer_expression -> expression
rule 14   function_call -> function_call_or_method
rule 15   function_call_or_method -> function_call_generic
rule 16   function_call_or_method -> postfix_expression DOT function_call_generic
rule 17   function_call_generic -> function_call_header_with_parameters RIGHT_PAREN
rule 18   function_call_generic -> function_call_header_no_parameters RIGHT_PAREN
rule 19   function_call_header_no_parameters -> function_call_header VOID_TYPE
rule 20   function_call_header_no_parameters -> function_call_header
rule 21   function_call_header_with_parameters -> function_call_header assignment_expression
rule 22   function_call_header_with_parameters -> function_call_header_with_parameters COMMA assignment_expression
rule 23   function_call_header -> function_identifier LEFT_PAREN
rule 24   function_identifier -> type_specifier
rule 25   function_identifier -> IDENTIFIER
rule 26   function_identifier -> FIELD_SELECTION
rule 27   unary_expression -> postfix_expression
rule 28   unary_expression -> INC_OP unary_expression
rule 29   unary_expression -> DEC_OP unary_expression
rule 30   unary_expression -> unary_operator unary_expression
rule 31   unary_expression -> LEFT_PAREN type_specifier_nonarray RIGHT_PAREN unary_expression
rule 32   unary_operator -> PLUS
rule 33   unary_operator -> DASH
rule 34   unary_operator -> BANG
rule 35   unary_operator -> TILDE
rule 36   multiplicative_expression -> unary_expression
rule 37   multiplicative_expression -> multiplicative_expression STAR unary_expression
rule 38   multiplicative_expression -> multiplicative_expression SLASH unary_expression
rule 39   multiplicative_expression -> multiplicative_expression PERCENT unary_expression
rule 40   additive_expression -> multiplicative_expression
rule 41   additive_expression -> additive_expression PLUS multiplicative_expression
rule 42   additive_expression -> additive_expression DASH multiplicative_expression
rule 43   shift_expression -> additive_expression
rule 44   shift_expression -> shift_expression LEFT_OP additive_expression
rule 45   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 46   relational_expression -> shift_expression
rule 47   relational_expression -> relational_expression LEFT_ANGLE shift_expression
rule 48   relational_expression -> relational_expression RIGHT_ANGLE shift_expression
rule 49   relational_expression -> relational_expression LE_OP shift_expression
rule 50   relational_expression -> relational_expression GE_OP shift_expression
rule 51   equality_expression -> relational_expression
rule 52   equality_expression -> equality_expression EQ_OP relational_expression
rule 53   equality_expression -> equality_expression NE_OP relational_expression
rule 54   and_expression -> equality_expression
rule 55   and_expression -> and_expression AMPERSAND equality_expression
rule 56   exclusive_or_expression -> and_expression
rule 57   exclusive_or_expression -> exclusive_or_expression CARET and_expression
rule 58   inclusive_or_expression -> exclusive_or_expression
rule 59   inclusive_or_expression -> inclusive_or_expression VERTICAL_BAR exclusive_or_expression
rule 60   logical_and_expression -> inclusive_or_expression
rule 61   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 62   logical_xor_expression -> logical_and_expression
rule 63   logical_xor_expression -> logical_xor_expression XOR_OP logical_and_expression
rule 64   logical_or_expression -> logical_xor_expression
rule 65   logical_or_expression -> logical_or_expression OR_OP logical_xor_expression
rule 66   conditional_expression -> logical_or_expression
rule 67   conditional_expression -> logical_or_expression QUESTION expression COLON assignment_expression
rule 68   assignment_expression -> conditional_expression
rule 69   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 70   assignment_operator -> EQUAL
rule 71   assignment_operator -> MUL_ASSIGN
rule 72   assignment_operator -> DIV_ASSIGN
rule 73   assignment_operator -> MOD_ASSIGN
rule 74   assignment_operator -> ADD_ASSIGN
rule 75   assignment_operator -> SUB_ASSIGN
rule 76   assignment_operator -> LEFT_ASSIGN
rule 77   assignment_operator -> RIGHT_ASSIGN
rule 78   assignment_operator -> AND_ASSIGN
rule 79   assignment_operator -> XOR_ASSIGN
rule 80   assignment_operator -> OR_ASSIGN
rule 81   expression -> assignment_expression
rule 82   expression -> expression COMMA assignment_expression
rule 83   constant_expression -> conditional_expression
rule 84   declaration -> function_prototype SEMICOLON
rule 85   declaration -> init_declarator_list SEMICOLON
rule 86   function_prototype -> function_declarator RIGHT_PAREN
rule 87   function_prototype -> function_declarator RIGHT_PAREN COLON IDENTIFIER
rule 88   function_declarator -> function_header
rule 89   function_declarator -> function_header_with_parameters
rule 90   function_header_with_parameters -> function_header parameter_declaration
rule 91   function_header_with_parameters -> function_header_with_parameters COMMA parameter_declaration
rule 92   function_header -> fully_specified_type IDENTIFIER LEFT_PAREN
rule 93   parameter_declarator -> type_specifier IDENTIFIER
rule 94   parameter_declarator -> type_specifier IDENTIFIER EQUAL initializer
rule 95   parameter_declarator -> type_specifier IDENTIFIER register_specifier
rule 96   parameter_declarator -> type_specifier IDENTIFIER COLON IDENTIFIER
rule 97   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 98   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER
rule 99   parameter_declaration -> type_qualifier parameter_qualifier parameter_declarator
rule 100  parameter_declaration -> parameter_qualifier parameter_declarator
rule 101  parameter_declaration -> type_qualifier parameter_qualifier parameter_type_specifier
rule 102  parameter_declaration -> parameter_qualifier parameter_type_specifier
rule 103  parameter_qualifier ->		/* empty */
rule 104  parameter_qualifier -> IN_QUAL
rule 105  parameter_qualifier -> OUT_QUAL
rule 106  parameter_qualifier -> INOUT_QUAL
rule 107  parameter_type_specifier -> type_specifier
rule 108  init_declarator_list -> single_declaration
rule 109  init_declarator_list -> init_declarator_list COMMA IDENTIFIER type_info
rule 110  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info
rule 111  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info
rule 112  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer
rule 113  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer
rule 114  init_declarator_list -> init_declarator_list COMMA IDENTIFIER type_info EQUAL initializer
rule 115  single_declaration -> fully_specified_type
rule 116  single_declaration -> fully_specified_type IDENTIFIER type_info
rule 117  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info
rule 118  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info
rule 119  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer
rule 120  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer
rule 121  single_declaration -> fully_specified_type IDENTIFIER type_info EQUAL initializer
rule 122  fully_specified_type -> type_specifier
rule 123  fully_specified_type -> type_qualifier type_specifier
rule 124  type_qualifier -> CONST_QUAL
rule 125  type_qualifier -> STATIC_QUAL
rule 126  type_qualifier -> STATIC_QUAL CONST_QUAL
rule 127  type_qualifier -> ATTRIBUTE
rule 128  type_qualifier -> VARYING
rule 129  type_qualifier -> UNIFORM
rule 130  type_specifier -> type_specifier_nonarray
rule 131  type_specifier -> type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 132  type_specifier_nonarray -> VOID_TYPE
rule 133  type_specifier_nonarray -> FLOAT_TYPE
rule 134  type_specifier_nonarray -> HALF_TYPE
rule 135  type_specifier_nonarray -> FIXED_TYPE
rule 136  type_specifier_nonarray -> INT_TYPE
rule 137  type_specifier_nonarray -> BOOL_TYPE
rule 138  type_specifier_nonarray -> VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 139  type_specifier_nonarray -> VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 140  type_specifier_nonarray -> VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE
rule 141  type_specifier_nonarray -> VEC2
rule 142  type_specifier_nonarray -> VEC3
rule 143  type_specifier_nonarray -> VEC4
rule 144  type_specifier_nonarray -> HVEC2
rule 145  type_specifier_nonarray -> HVEC3
rule 146  type_specifier_nonarray -> HVEC4
rule 147  type_specifier_nonarray -> FVEC2
rule 148  type_specifier_nonarray -> FVEC3
rule 149  type_specifier_nonarray -> FVEC4
rule 150  type_specifier_nonarray -> BVEC2
rule 151  type_specifier_nonarray -> BVEC3
rule 152  type_specifier_nonarray -> BVEC4
rule 153  type_specifier_nonarray -> IVEC2
rule 154  type_specifier_nonarray -> IVEC3
rule 155  type_specifier_nonarray -> IVEC4
rule 156  type_specifier_nonarray -> MATRIX2
rule 157  type_specifier_nonarray -> MATRIX3
rule 158  type_specifier_nonarray -> MATRIX4
rule 159  type_specifier_nonarray -> HMATRIX2
rule 160  type_specifier_nonarray -> HMATRIX3
rule 161  type_specifier_nonarray -> HMATRIX4
rule 162  type_specifier_nonarray -> FMATRIX2
rule 163  type_specifier_nonarray -> FMATRIX3
rule 164  type_specifier_nonarray -> FMATRIX4
rule 165  type_specifier_nonarray -> TEXTURE
rule 166  type_specifier_nonarray -> SAMPLERGENERIC
rule 167  type_specifier_nonarray -> SAMPLER1D
rule 168  type_specifier_nonarray -> SAMPLER2D
rule 169  type_specifier_nonarray -> SAMPLER3D
rule 170  type_specifier_nonarray -> SAMPLERCUBE
rule 171  type_specifier_nonarray -> SAMPLERRECT
rule 172  type_specifier_nonarray -> SAMPLERRECTSHADOW
rule 173  type_specifier_nonarray -> SAMPLER1DSHADOW
rule 174  type_specifier_nonarray -> SAMPLER2DSHADOW
rule 175  type_specifier_nonarray -> struct_specifier
rule 176  type_specifier_nonarray -> TYPE_NAME
rule 177  struct_specifier -> STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 178  struct_specifier -> STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 179  struct_declaration_list -> struct_declaration
rule 180  struct_declaration_list -> struct_declaration_list struct_declaration
rule 181  struct_declaration -> type_specifier struct_declarator_list SEMICOLON
rule 182  struct_declarator_list -> struct_declarator
rule 183  struct_declarator_list -> struct_declarator_list COMMA struct_declarator
rule 184  struct_declarator -> IDENTIFIER
rule 185  struct_declarator -> IDENTIFIER COLON IDENTIFIER
rule 186  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 187  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER
rule 188  initializer -> assignment_expression
rule 189  initializer -> initialization_list
rule 190  initializer -> sampler_initializer
rule 191  declaration_statement -> declaration
rule 192  statement -> compound_statement
rule 193  statement -> simple_statement
rule 194  simple_statement -> declaration_statement
rule 195  simple_statement -> expression_statement
rule 196  simple_statement -> selection_statement
rule 197  simple_statement -> iteration_statement
rule 198  simple_statement -> jump_statement
rule 199  compound_statement -> LEFT_BRACE RIGHT_BRACE
rule 200  @1 ->		/* empty */
rule 201  @2 ->		/* empty */
rule 202  compound_statement -> LEFT_BRACE @1 statement_list @2 RIGHT_BRACE
rule 203  statement_no_new_scope -> compound_statement_no_new_scope
rule 204  statement_no_new_scope -> simple_statement
rule 205  compound_statement_no_new_scope -> LEFT_BRACE RIGHT_BRACE
rule 206  compound_statement_no_new_scope -> LEFT_BRACE statement_list RIGHT_BRACE
rule 207  statement_list -> statement
rule 208  statement_list -> statement_list statement
rule 209  expression_statement -> SEMICOLON
rule 210  expression_statement -> expression SEMICOLON
rule 211  selection_statement -> IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
rule 212  selection_rest_statement -> statement ELSE statement
rule 213  selection_rest_statement -> statement
rule 214  condition -> expression
rule 215  condition -> fully_specified_type IDENTIFIER EQUAL initializer
rule 216  @3 ->		/* empty */
rule 217  iteration_statement -> WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope
rule 218  @4 ->		/* empty */
rule 219  iteration_statement -> DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
rule 220  @5 ->		/* empty */
rule 221  iteration_statement -> FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
rule 222  for_init_statement -> expression_statement
rule 223  for_init_statement -> declaration_statement
rule 224  conditionopt -> condition
rule 225  conditionopt ->		/* empty */
rule 226  for_rest_statement -> conditionopt SEMICOLON
rule 227  for_rest_statement -> conditionopt SEMICOLON expression
rule 228  jump_statement -> CONTINUE SEMICOLON
rule 229  jump_statement -> BREAK SEMICOLON
rule 230  jump_statement -> RETURN SEMICOLON
rule 231  jump_statement -> RETURN expression SEMICOLON
rule 232  jump_statement -> DISCARD SEMICOLON
rule 233  translation_unit -> external_declaration
rule 234  translation_unit -> translation_unit external_declaration
rule 235  external_declaration -> function_definition
rule 236  external_declaration -> declaration
rule 237  external_declaration -> SEMICOLON
rule 238  @6 ->		/* empty */
rule 239  function_definition -> function_prototype @6 compound_statement_no_new_scope
rule 240  initialization_list -> LEFT_BRACE initializer_list RIGHT_BRACE
rule 241  initialization_list -> LEFT_BRACE initializer_list COMMA RIGHT_BRACE
rule 242  initializer_list -> assignment_expression
rule 243  initializer_list -> initialization_list
rule 244  initializer_list -> initializer_list COMMA assignment_expression
rule 245  initializer_list -> initializer_list COMMA initialization_list
rule 246  annotation -> LEFT_ANGLE RIGHT_ANGLE
rule 247  annotation -> LEFT_ANGLE annotation_list RIGHT_ANGLE
rule 248  annotation_list -> annotation_item
rule 249  annotation_list -> annotation_list annotation_item
rule 250  annotation_item -> ann_type IDENTIFIER EQUAL ann_literal SEMICOLON
rule 251  ann_type -> FLOAT_TYPE
rule 252  ann_type -> HALF_TYPE
rule 253  ann_type -> FIXED_TYPE
rule 254  ann_type -> INT_TYPE
rule 255  ann_type -> BOOL_TYPE
rule 256  ann_type -> STRING_TYPE
rule 257  ann_type -> BVEC2
rule 258  ann_type -> BVEC3
rule 259  ann_type -> BVEC4
rule 260  ann_type -> IVEC2
rule 261  ann_type -> IVEC3
rule 262  ann_type -> IVEC4
rule 263  ann_type -> VEC2
rule 264  ann_type -> VEC3
rule 265  ann_type -> VEC4
rule 266  ann_type -> HVEC2
rule 267  ann_type -> HVEC3
rule 268  ann_type -> HVEC4
rule 269  ann_type -> FVEC2
rule 270  ann_type -> FVEC3
rule 271  ann_type -> FVEC4
rule 272  ann_literal -> ann_numerical_constant
rule 273  ann_literal -> STRINGCONSTANT
rule 274  ann_literal -> ann_literal_constructor
rule 275  ann_literal -> ann_literal_init_list
rule 276  ann_numerical_constant -> INTCONSTANT
rule 277  ann_numerical_constant -> BOOLCONSTANT
rule 278  ann_numerical_constant -> FLOATCONSTANT
rule 279  ann_literal_constructor -> ann_type LEFT_PAREN ann_value_list RIGHT_PAREN
rule 280  ann_value_list -> ann_numerical_constant
rule 281  ann_value_list -> ann_value_list COMMA ann_numerical_constant
rule 282  ann_literal_init_list -> LEFT_BRACE ann_value_list RIGHT_BRACE
rule 283  register_specifier -> COLON REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN
rule 284  semantic -> COLON IDENTIFIER
rule 285  type_info ->		/* empty */
rule 286  type_info -> semantic
rule 287  type_info -> register_specifier
rule 288  type_info -> annotation
rule 289  type_info -> semantic annotation
rule 290  type_info -> semantic register_specifier
rule 291  type_info -> register_specifier annotation
rule 292  type_info -> semantic register_specifier annotation
rule 293  sampler_initializer -> SAMPLERSTATE LEFT_BRACE sampler_init_list RIGHT_BRACE
rule 294  sampler_initializer -> SAMPLERSTATE LEFT_BRACE RIGHT_BRACE
rule 295  sampler_init_list -> sampler_init_item
rule 296  sampler_init_list -> sampler_init_list sampler_init_item
rule 297  sampler_init_item -> IDENTIFIER EQUAL IDENTIFIER SEMICOLON
rule 298  sampler_init_item -> IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON
rule 299  sampler_init_item -> IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON
rule 300  sampler_init_item -> TEXTURE EQUAL IDENTIFIER SEMICOLON
rule 301  sampler_init_item -> TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON
rule 302  sampler_init_item -> TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON

Terminals, with rules where they appear

$ (-1)
error (256)
ATTRIBUTE (258) 127
CONST_QUAL (259) 124 126
STATIC_QUAL (260) 125 126
BOOL_TYPE (261) 137 140 255
FLOAT_TYPE (262) 133 138 251
INT_TYPE (263) 136 139 254
STRING_TYPE (264) 256
FIXED_TYPE (265) 135 253
HALF_TYPE (266) 134 252
BREAK (267) 229
CONTINUE (268) 228
DO (269) 219
ELSE (270) 212
FOR (271) 221
IF (272) 211
DISCARD (273) 232
RETURN (274) 230 231
BVEC2 (275) 150 257
BVEC3 (276) 151 258
BVEC4 (277) 152 259
IVEC2 (278) 153 260
IVEC3 (279) 154 261
IVEC4 (280) 155 262
VEC2 (281) 141 263
VEC3 (282) 142 264
VEC4 (283) 143 265
HVEC2 (284) 144 266
HVEC3 (285) 145 267
HVEC4 (286) 146 268
FVEC2 (287) 147 269
FVEC3 (288) 148 270
FVEC4 (289) 149 271
MATRIX2 (290) 156
MATRIX3 (291) 157
MATRIX4 (292) 158
HMATRIX2 (293) 159
HMATRIX3 (294) 160
HMATRIX4 (295) 161
FMATRIX2 (296) 162
FMATRIX3 (297) 163
FMATRIX4 (298) 164
IN_QUAL (299) 104
OUT_QUAL (300) 105
INOUT_QUAL (301) 106
UNIFORM (302) 129
VARYING (303) 128
STRUCT (304) 177 178
VOID_TYPE (305) 19 132
WHILE (306) 217 219
SAMPLER1D (307) 167
SAMPLER2D (308) 168
SAMPLER3D (309) 169
SAMPLERCUBE (310) 170
SAMPLER1DSHADOW (311) 173
SAMPLER2DSHADOW (312) 174
SAMPLERRECTSHADOW (313) 172
SAMPLERRECT (314) 171
SAMPLERGENERIC (315) 166
VECTOR (316) 138 139 140
MATRIX (317)
REGISTER (318) 283
TEXTURE (319) 165 300 301 302
SAMPLERSTATE (320) 293 294
IDENTIFIER (321) 1 25 87 92 93 94 95 96 97 98 109 110 111 112 113 114
    116 117 118 119 120 121 177 184 185 186 187 215 250 283 284 297
    298 299 300 301 302
TYPE_NAME (322) 176
FLOATCONSTANT (323) 4 278
INTCONSTANT (324) 3 138 139 140 276
BOOLCONSTANT (325) 5 277
STRINGCONSTANT (326) 273
FIELD_SELECTION (327) 10 26
LEFT_OP (328) 44
RIGHT_OP (329) 45
INC_OP (330) 11 28
DEC_OP (331) 12 29
LE_OP (332) 49
GE_OP (333) 50
EQ_OP (334) 52
NE_OP (335) 53
AND_OP (336) 61
OR_OP (337) 65
XOR_OP (338) 63
MUL_ASSIGN (339) 71
DIV_ASSIGN (340) 72
ADD_ASSIGN (341) 74
MOD_ASSIGN (342) 73
LEFT_ASSIGN (343) 76
RIGHT_ASSIGN (344) 77
AND_ASSIGN (345) 78
XOR_ASSIGN (346) 79
OR_ASSIGN (347) 80
SUB_ASSIGN (348) 75
LEFT_PAREN (349) 6 23 31 92 211 217 219 221 279 283 299 302
RIGHT_PAREN (350) 6 17 18 31 86 87 211 217 219 221 279 283 299 302
LEFT_BRACKET (351) 8 97 98 110 111 112 113 117 118 119 120 131 186
    187
RIGHT_BRACKET (352) 8 97 98 110 111 112 113 117 118 119 120 131 186
    187
LEFT_BRACE (353) 177 178 199 202 205 206 240 241 282 293 294
RIGHT_BRACE (354) 177 178 199 202 205 206 240 241 282 293 294
DOT (355) 10 16
COMMA (356) 22 82 91 109 110 111 112 113 114 138 139 140 183 241 244
    245 281
COLON (357) 67 87 96 98 185 187 283 284
EQUAL (358) 70 94 112 113 114 119 120 121 215 250 297 298 299 300 301
    302
SEMICOLON (359) 84 85 181 209 210 219 226 227 228 229 230 231 232 237
    250 297 298 299 300 301 302
BANG (360) 34
DASH (361) 33 42
TILDE (362) 35
PLUS (363) 32 41
STAR (364) 37
SLASH (365) 38
PERCENT (366) 39
LEFT_ANGLE (367) 47 138 139 140 246 247 298 301
RIGHT_ANGLE (368) 48 138 139 140 246 247 298 301
VERTICAL_BAR (369) 59
CARET (370) 57
AMPERSAND (371) 55
QUESTION (372) 67

Nonterminals, with rules where they appear

variable_identifier (118)
    on left: 1, on right: 2
primary_expression (119)
    on left: 2 3 4 5 6, on right: 7
postfix_expression (120)
    on left: 7 8 9 10 11 12, on right: 8 10 11 12 16 27
integer_expression (121)
    on left: 13, on right: 8
function_call (122)
    on left: 14, on right: 9
function_call_or_method (123)
    on left: 15 16, on right: 14
function_call_generic (124)
    on left: 17 18, on right: 15 16
function_call_header_no_parameters (125)
    on left: 19 20, on right: 18
function_call_header_with_parameters (126)
    on left: 21 22, on right: 17 22
function_call_header (127)
    on left: 23, on right: 19 20 21
function_identifier (128)
    on left: 24 25 26, on right: 23
unary_expression (129)
    on left: 27 28 29 30 31, on right: 28 29 30 31 36 37 38 39 69
unary_operator (130)
    on left: 32 33 34 35, on right: 30
multiplicative_expression (131)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (132)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (133)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (134)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (135)
    on left: 51 52 53, on right: 52 53 54 55
and_expression (136)
    on left: 54 55, on right: 55 56 57
exclusive_or_expression (137)
    on left: 56 57, on right: 57 58 59
inclusive_or_expression (138)
    on left: 58 59, on right: 59 60 61
logical_and_expression (139)
    on left: 60 61, on right: 61 62 63
logical_xor_expression (140)
    on left: 62 63, on right: 63 64 65
logical_or_expression (141)
    on left: 64 65, on right: 65 66 67
conditional_expression (142)
    on left: 66 67, on right: 68 83
assignment_expression (143)
    on left: 68 69, on right: 21 22 67 69 81 82 188 242 244
assignment_operator (144)
    on left: 70 71 72 73 74 75 76 77 78 79 80, on right: 69
expression (145)
    on left: 81 82, on right: 6 13 67 82 210 211 214 219 227 231
constant_expression (146)
    on left: 83, on right: 97 98 111 113 118 120 131 186 187
declaration (147)
    on left: 84 85, on right: 191 236
function_prototype (148)
    on left: 86 87, on right: 84 239
function_declarator (149)
    on left: 88 89, on right: 86 87
function_header_with_parameters (150)
    on left: 90 91, on right: 89 91
function_header (151)
    on left: 92, on right: 88 90
parameter_declarator (152)
    on left: 93 94 95 96 97 98, on right: 99 100
parameter_declaration (153)
    on left: 99 100 101 102, on right: 90 91
parameter_qualifier (154)
    on left: 103 104 105 106, on right: 99 100 101 102
parameter_type_specifier (155)
    on left: 107, on right: 101 102
init_declarator_list (156)
    on left: 108 109 110 111 112 113 114, on right: 85 109 110 111
    112 113 114
single_declaration (157)
    on left: 115 116 117 118 119 120 121, on right: 108
fully_specified_type (158)
    on left: 122 123, on right: 92 115 116 117 118 119 120 121 215
type_qualifier (159)
    on left: 124 125 126 127 128 129, on right: 99 101 123
type_specifier (160)
    on left: 130 131, on right: 24 93 94 95 96 97 98 107 122 123 181
type_specifier_nonarray (161)
    on left: 132 133 134 135 136 137 138 139 140 141 142 143 144 145
    146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
    162 163 164 165 166 167 168 169 170 171 172 173 174 175 176,
    on right: 31 130 131
struct_specifier (162)
    on left: 177 178, on right: 175
struct_declaration_list (163)
    on left: 179 180, on right: 177 178 180
struct_declaration (164)
    on left: 181, on right: 179 180
struct_declarator_list (165)
    on left: 182 183, on right: 181 183
struct_declarator (166)
    on left: 184 185 186 187, on right: 182 183
initializer (167)
    on left: 188 189 190, on right: 94 112 113 114 119 120 121 215
declaration_statement (168)
    on left: 191, on right: 194 223
statement (169)
    on left: 192 193, on right: 207 208 212 213 219
simple_statement (170)
    on left: 194 195 196 197 198, on right: 193 204
compound_statement (171)
    on left: 199 202, on right: 192
@1 (172)
    on left: 200, on right: 202
@2 (173)
    on left: 201, on right: 202
statement_no_new_scope (174)
    on left: 203 204, on right: 217 221
compound_statement_no_new_scope (175)
    on left: 205 206, on right: 203 239
statement_list (176)
    on left: 207 208, on right: 202 206 208
expression_statement (177)
    on left: 209 210, on right: 195 222
selection_statement (178)
    on left: 211, on right: 196
selection_rest_statement (179)
    on left: 212 213, on right: 211
condition (180)
    on left: 214 215, on right: 217 224
iteration_statement (181)
    on left: 217 219 221, on right: 197
@3 (182)
    on left: 216, on right: 217
@4 (183)
    on left: 218, on right: 219
@5 (184)
    on left: 220, on right: 221
for_init_statement (185)
    on left: 222 223, on right: 221
conditionopt (186)
    on left: 224 225, on right: 226 227
for_rest_statement (187)
    on left: 226 227, on right: 221
jump_statement (188)
    on left: 228 229 230 231 232, on right: 198
translation_unit (189)
    on left: 233 234, on right: 234
external_declaration (190)
    on left: 235 236 237, on right: 233 234
function_definition (191)
    on left: 239, on right: 235
@6 (192)
    on left: 238, on right: 239
initialization_list (193)
    on left: 240 241, on right: 189 243 245
initializer_list (194)
    on left: 242 243 244 245, on right: 240 241 244 245
annotation (195)
    on left: 246 247, on right: 288 289 291 292
annotation_list (196)
    on left: 248 249, on right: 247 249
annotation_item (197)
    on left: 250, on right: 248 249
ann_type (198)
    on left: 251 252 253 254 255 256 257 258 259 260 261 262 263 264
    265 266 267 268 269 270 271, on right: 250 279
ann_literal (199)
    on left: 272 273 274 275, on right: 250
ann_numerical_constant (200)
    on left: 276 277 278, on right: 272 280 281
ann_literal_constructor (201)
    on left: 279, on right: 274
ann_value_list (202)
    on left: 280 281, on right: 279 281 282
ann_literal_init_list (203)
    on left: 282, on right: 275
register_specifier (204)
    on left: 283, on right: 95 287 290 291 292
semantic (205)
    on left: 284, on right: 286 289 290 292
type_info (206)
    on left: 285 286 287 288 289 290 291 292, on right: 109 110 111
    112 113 114 116 117 118 119 120 121
sampler_initializer (207)
    on left: 293 294, on right: 190
sampler_init_list (208)
    on left: 295 296, on right: 293 296
sampler_init_item (209)
    on left: 297 298 299 300 301 302, on right: 295 296


state 0

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48
    SEMICOLON	shift, and go to state 49

    declaration	go to state 50
    function_prototype	go to state 51
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 59
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    translation_unit	go to state 62
    external_declaration	go to state 63
    function_definition	go to state 64



state 1

    type_qualifier  ->  ATTRIBUTE .   (rule 127)

    $default	reduce using rule 127 (type_qualifier)



state 2

    type_qualifier  ->  CONST_QUAL .   (rule 124)

    $default	reduce using rule 124 (type_qualifier)



state 3

    type_qualifier  ->  STATIC_QUAL .   (rule 125)
    type_qualifier  ->  STATIC_QUAL . CONST_QUAL   (rule 126)

    CONST_QUAL	shift, and go to state 65

    $default	reduce using rule 125 (type_qualifier)



state 4

    type_specifier_nonarray  ->  BOOL_TYPE .   (rule 137)

    $default	reduce using rule 137 (type_specifier_nonarray)



state 5

    type_specifier_nonarray  ->  FLOAT_TYPE .   (rule 133)

    $default	reduce using rule 133 (type_specifier_nonarray)



state 6

    type_specifier_nonarray  ->  INT_TYPE .   (rule 136)

    $default	reduce using rule 136 (type_specifier_nonarray)



state 7

    type_specifier_nonarray  ->  FIXED_TYPE .   (rule 135)

    $default	reduce using rule 135 (type_specifier_nonarray)



state 8

    type_specifier_nonarray  ->  HALF_TYPE .   (rule 134)

    $default	reduce using rule 134 (type_specifier_nonarray)



state 9

    type_specifier_nonarray  ->  BVEC2 .   (rule 150)

    $default	reduce using rule 150 (type_specifier_nonarray)



state 10

    type_specifier_nonarray  ->  BVEC3 .   (rule 151)

    $default	reduce using rule 151 (type_specifier_nonarray)



state 11

    type_specifier_nonarray  ->  BVEC4 .   (rule 152)

    $default	reduce using rule 152 (type_specifier_nonarray)



state 12

    type_specifier_nonarray  ->  IVEC2 .   (rule 153)

    $default	reduce using rule 153 (type_specifier_nonarray)



state 13

    type_specifier_nonarray  ->  IVEC3 .   (rule 154)

    $default	reduce using rule 154 (type_specifier_nonarray)



state 14

    type_specifier_nonarray  ->  IVEC4 .   (rule 155)

    $default	reduce using rule 155 (type_specifier_nonarray)



state 15

    type_specifier_nonarray  ->  VEC2 .   (rule 141)

    $default	reduce using rule 141 (type_specifier_nonarray)



state 16

    type_specifier_nonarray  ->  VEC3 .   (rule 142)

    $default	reduce using rule 142 (type_specifier_nonarray)



state 17

    type_specifier_nonarray  ->  VEC4 .   (rule 143)

    $default	reduce using rule 143 (type_specifier_nonarray)



state 18

    type_specifier_nonarray  ->  HVEC2 .   (rule 144)

    $default	reduce using rule 144 (type_specifier_nonarray)



state 19

    type_specifier_nonarray  ->  HVEC3 .   (rule 145)

    $default	reduce using rule 145 (type_specifier_nonarray)



state 20

    type_specifier_nonarray  ->  HVEC4 .   (rule 146)

    $default	reduce using rule 146 (type_specifier_nonarray)



state 21

    type_specifier_nonarray  ->  FVEC2 .   (rule 147)

    $default	reduce using rule 147 (type_specifier_nonarray)



state 22

    type_specifier_nonarray  ->  FVEC3 .   (rule 148)

    $default	reduce using rule 148 (type_specifier_nonarray)



state 23

    type_specifier_nonarray  ->  FVEC4 .   (rule 149)

    $default	reduce using rule 149 (type_specifier_nonarray)



state 24

    type_specifier_nonarray  ->  MATRIX2 .   (rule 156)

    $default	reduce using rule 156 (type_specifier_nonarray)



state 25

    type_specifier_nonarray  ->  MATRIX3 .   (rule 157)

    $default	reduce using rule 157 (type_specifier_nonarray)



state 26

    type_specifier_nonarray  ->  MATRIX4 .   (rule 158)

    $default	reduce using rule 158 (type_specifier_nonarray)



state 27

    type_specifier_nonarray  ->  HMATRIX2 .   (rule 159)

    $default	reduce using rule 159 (type_specifier_nonarray)



state 28

    type_specifier_nonarray  ->  HMATRIX3 .   (rule 160)

    $default	reduce using rule 160 (type_specifier_nonarray)



state 29

    type_specifier_nonarray  ->  HMATRIX4 .   (rule 161)

    $default	reduce using rule 161 (type_specifier_nonarray)



state 30

    type_specifier_nonarray  ->  FMATRIX2 .   (rule 162)

    $default	reduce using rule 162 (type_specifier_nonarray)



state 31

    type_specifier_nonarray  ->  FMATRIX3 .   (rule 163)

    $default	reduce using rule 163 (type_specifier_nonarray)



state 32

    type_specifier_nonarray  ->  FMATRIX4 .   (rule 164)

    $default	reduce using rule 164 (type_specifier_nonarray)



state 33

    type_qualifier  ->  UNIFORM .   (rule 129)

    $default	reduce using rule 129 (type_qualifier)



state 34

    type_qualifier  ->  VARYING .   (rule 128)

    $default	reduce using rule 128 (type_qualifier)



state 35

    struct_specifier  ->  STRUCT . IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 177)
    struct_specifier  ->  STRUCT . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 178)

    IDENTIFIER	shift, and go to state 66
    LEFT_BRACE	shift, and go to state 67



state 36

    type_specifier_nonarray  ->  VOID_TYPE .   (rule 132)

    $default	reduce using rule 132 (type_specifier_nonarray)



state 37

    type_specifier_nonarray  ->  SAMPLER1D .   (rule 167)

    $default	reduce using rule 167 (type_specifier_nonarray)



state 38

    type_specifier_nonarray  ->  SAMPLER2D .   (rule 168)

    $default	reduce using rule 168 (type_specifier_nonarray)



state 39

    type_specifier_nonarray  ->  SAMPLER3D .   (rule 169)

    $default	reduce using rule 169 (type_specifier_nonarray)



state 40

    type_specifier_nonarray  ->  SAMPLERCUBE .   (rule 170)

    $default	reduce using rule 170 (type_specifier_nonarray)



state 41

    type_specifier_nonarray  ->  SAMPLER1DSHADOW .   (rule 173)

    $default	reduce using rule 173 (type_specifier_nonarray)



state 42

    type_specifier_nonarray  ->  SAMPLER2DSHADOW .   (rule 174)

    $default	reduce using rule 174 (type_specifier_nonarray)



state 43

    type_specifier_nonarray  ->  SAMPLERRECTSHADOW .   (rule 172)

    $default	reduce using rule 172 (type_specifier_nonarray)



state 44

    type_specifier_nonarray  ->  SAMPLERRECT .   (rule 171)

    $default	reduce using rule 171 (type_specifier_nonarray)



state 45

    type_specifier_nonarray  ->  SAMPLERGENERIC .   (rule 166)

    $default	reduce using rule 166 (type_specifier_nonarray)



state 46

    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 138)
    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 139)
    type_specifier_nonarray  ->  VECTOR . LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 140)

    LEFT_ANGLE	shift, and go to state 68



state 47

    type_specifier_nonarray  ->  TEXTURE .   (rule 165)

    $default	reduce using rule 165 (type_specifier_nonarray)



state 48

    type_specifier_nonarray  ->  TYPE_NAME .   (rule 176)

    $default	reduce using rule 176 (type_specifier_nonarray)



state 49

    external_declaration  ->  SEMICOLON .   (rule 237)

    $default	reduce using rule 237 (external_declaration)



state 50

    external_declaration  ->  declaration .   (rule 236)

    $default	reduce using rule 236 (external_declaration)



state 51

    declaration  ->  function_prototype . SEMICOLON   (rule 84)
    function_definition  ->  function_prototype . @6 compound_statement_no_new_scope   (rule 239)

    SEMICOLON	shift, and go to state 69

    $default	reduce using rule 238 (@6)

    @6  	go to state 70



state 52

    function_prototype  ->  function_declarator . RIGHT_PAREN   (rule 86)
    function_prototype  ->  function_declarator . RIGHT_PAREN COLON IDENTIFIER   (rule 87)

    RIGHT_PAREN	shift, and go to state 71



state 53

    function_declarator  ->  function_header_with_parameters .   (rule 89)
    function_header_with_parameters  ->  function_header_with_parameters . COMMA parameter_declaration   (rule 91)

    COMMA	shift, and go to state 72

    $default	reduce using rule 89 (function_declarator)



state 54

    function_declarator  ->  function_header .   (rule 88)
    function_header_with_parameters  ->  function_header . parameter_declaration   (rule 90)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    IN_QUAL	shift, and go to state 73
    OUT_QUAL	shift, and go to state 74
    INOUT_QUAL	shift, and go to state 75
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34

    RIGHT_PAREN	reduce using rule 88 (function_declarator)
    $default	reduce using rule 103 (parameter_qualifier)

    parameter_declaration	go to state 76
    parameter_qualifier	go to state 77
    type_qualifier	go to state 78



state 55

    declaration  ->  init_declarator_list . SEMICOLON   (rule 85)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 113)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER type_info EQUAL initializer   (rule 114)

    COMMA	shift, and go to state 79
    SEMICOLON	shift, and go to state 80



state 56

    init_declarator_list  ->  single_declaration .   (rule 108)

    $default	reduce using rule 108 (init_declarator_list)



state 57

    function_header  ->  fully_specified_type . IDENTIFIER LEFT_PAREN   (rule 92)
    single_declaration  ->  fully_specified_type .   (rule 115)
    single_declaration  ->  fully_specified_type . IDENTIFIER type_info   (rule 116)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 118)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 119)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 120)
    single_declaration  ->  fully_specified_type . IDENTIFIER type_info EQUAL initializer   (rule 121)

    IDENTIFIER	shift, and go to state 81

    $default	reduce using rule 115 (single_declaration)



state 58

    fully_specified_type  ->  type_qualifier . type_specifier   (rule 123)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48

    type_specifier	go to state 82
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 59

    fully_specified_type  ->  type_specifier .   (rule 122)

    $default	reduce using rule 122 (fully_specified_type)



state 60

    type_specifier  ->  type_specifier_nonarray .   (rule 130)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 131)

    LEFT_BRACKET	shift, and go to state 83

    $default	reduce using rule 130 (type_specifier)



state 61

    type_specifier_nonarray  ->  struct_specifier .   (rule 175)

    $default	reduce using rule 175 (type_specifier_nonarray)



state 62

    translation_unit  ->  translation_unit . external_declaration   (rule 234)

    $   	go to state 474
    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48
    SEMICOLON	shift, and go to state 49

    declaration	go to state 50
    function_prototype	go to state 51
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 59
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    external_declaration	go to state 84
    function_definition	go to state 64



state 63

    translation_unit  ->  external_declaration .   (rule 233)

    $default	reduce using rule 233 (translation_unit)



state 64

    external_declaration  ->  function_definition .   (rule 235)

    $default	reduce using rule 235 (external_declaration)



state 65

    type_qualifier  ->  STATIC_QUAL CONST_QUAL .   (rule 126)

    $default	reduce using rule 126 (type_qualifier)



state 66

    struct_specifier  ->  STRUCT IDENTIFIER . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 177)

    LEFT_BRACE	shift, and go to state 85



state 67

    struct_specifier  ->  STRUCT LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 178)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48

    type_specifier	go to state 86
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    struct_declaration_list	go to state 87
    struct_declaration	go to state 88



state 68

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 138)
    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 139)
    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE . BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE   (rule 140)

    BOOL_TYPE	shift, and go to state 89
    FLOAT_TYPE	shift, and go to state 90
    INT_TYPE	shift, and go to state 91



state 69

    declaration  ->  function_prototype SEMICOLON .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 70

    function_definition  ->  function_prototype @6 . compound_statement_no_new_scope   (rule 239)

    LEFT_BRACE	shift, and go to state 92

    compound_statement_no_new_scope	go to state 93



state 71

    function_prototype  ->  function_declarator RIGHT_PAREN .   (rule 86)
    function_prototype  ->  function_declarator RIGHT_PAREN . COLON IDENTIFIER   (rule 87)

    COLON	shift, and go to state 94

    $default	reduce using rule 86 (function_prototype)



state 72

    function_header_with_parameters  ->  function_header_with_parameters COMMA . parameter_declaration   (rule 91)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    IN_QUAL	shift, and go to state 73
    OUT_QUAL	shift, and go to state 74
    INOUT_QUAL	shift, and go to state 75
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34

    $default	reduce using rule 103 (parameter_qualifier)

    parameter_declaration	go to state 95
    parameter_qualifier	go to state 77
    type_qualifier	go to state 78



state 73

    parameter_qualifier  ->  IN_QUAL .   (rule 104)

    $default	reduce using rule 104 (parameter_qualifier)



state 74

    parameter_qualifier  ->  OUT_QUAL .   (rule 105)

    $default	reduce using rule 105 (parameter_qualifier)



state 75

    parameter_qualifier  ->  INOUT_QUAL .   (rule 106)

    $default	reduce using rule 106 (parameter_qualifier)



state 76

    function_header_with_parameters  ->  function_header parameter_declaration .   (rule 90)

    $default	reduce using rule 90 (function_header_with_parameters)



state 77

    parameter_declaration  ->  parameter_qualifier . parameter_declarator   (rule 100)
    parameter_declaration  ->  parameter_qualifier . parameter_type_specifier   (rule 102)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48

    parameter_declarator	go to state 96
    parameter_type_specifier	go to state 97
    type_specifier	go to state 98
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 78

    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_declarator   (rule 99)
    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_type_specifier   (rule 101)

    IN_QUAL	shift, and go to state 73
    OUT_QUAL	shift, and go to state 74
    INOUT_QUAL	shift, and go to state 75

    $default	reduce using rule 103 (parameter_qualifier)

    parameter_qualifier	go to state 99



state 79

    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 113)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER type_info EQUAL initializer   (rule 114)

    IDENTIFIER	shift, and go to state 100



state 80

    declaration  ->  init_declarator_list SEMICOLON .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 81

    function_header  ->  fully_specified_type IDENTIFIER . LEFT_PAREN   (rule 92)
    single_declaration  ->  fully_specified_type IDENTIFIER . type_info   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 119)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 120)
    single_declaration  ->  fully_specified_type IDENTIFIER . type_info EQUAL initializer   (rule 121)

    LEFT_PAREN	shift, and go to state 101
    LEFT_BRACKET	shift, and go to state 102
    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 108



state 82

    fully_specified_type  ->  type_qualifier type_specifier .   (rule 123)

    $default	reduce using rule 123 (fully_specified_type)



state 83

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 131)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 144
    constant_expression	go to state 145
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 84

    translation_unit  ->  translation_unit external_declaration .   (rule 234)

    $default	reduce using rule 234 (translation_unit)



state 85

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 177)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48

    type_specifier	go to state 86
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    struct_declaration_list	go to state 147
    struct_declaration	go to state 88



state 86

    struct_declaration  ->  type_specifier . struct_declarator_list SEMICOLON   (rule 181)

    IDENTIFIER	shift, and go to state 148

    struct_declarator_list	go to state 149
    struct_declarator	go to state 150



state 87

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 178)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 180)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48
    RIGHT_BRACE	shift, and go to state 151

    type_specifier	go to state 86
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    struct_declaration	go to state 152



state 88

    struct_declaration_list  ->  struct_declaration .   (rule 179)

    $default	reduce using rule 179 (struct_declaration_list)



state 89

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 140)

    COMMA	shift, and go to state 153



state 90

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 138)

    COMMA	shift, and go to state 154



state 91

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE . COMMA INTCONSTANT RIGHT_ANGLE   (rule 139)

    COMMA	shift, and go to state 155



state 92

    compound_statement_no_new_scope  ->  LEFT_BRACE . RIGHT_BRACE   (rule 205)
    compound_statement_no_new_scope  ->  LEFT_BRACE . statement_list RIGHT_BRACE   (rule 206)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    RIGHT_BRACE	shift, and go to state 165
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 175
    simple_statement	go to state 176
    compound_statement	go to state 177
    statement_list	go to state 178
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 93

    function_definition  ->  function_prototype @6 compound_statement_no_new_scope .   (rule 239)

    $default	reduce using rule 239 (function_definition)



state 94

    function_prototype  ->  function_declarator RIGHT_PAREN COLON . IDENTIFIER   (rule 87)

    IDENTIFIER	shift, and go to state 183



state 95

    function_header_with_parameters  ->  function_header_with_parameters COMMA parameter_declaration .   (rule 91)

    $default	reduce using rule 91 (function_header_with_parameters)



state 96

    parameter_declaration  ->  parameter_qualifier parameter_declarator .   (rule 100)

    $default	reduce using rule 100 (parameter_declaration)



state 97

    parameter_declaration  ->  parameter_qualifier parameter_type_specifier .   (rule 102)

    $default	reduce using rule 102 (parameter_declaration)



state 98

    parameter_declarator  ->  type_specifier . IDENTIFIER   (rule 93)
    parameter_declarator  ->  type_specifier . IDENTIFIER EQUAL initializer   (rule 94)
    parameter_declarator  ->  type_specifier . IDENTIFIER register_specifier   (rule 95)
    parameter_declarator  ->  type_specifier . IDENTIFIER COLON IDENTIFIER   (rule 96)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 97)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 98)
    parameter_type_specifier  ->  type_specifier .   (rule 107)

    IDENTIFIER	shift, and go to state 184

    $default	reduce using rule 107 (parameter_type_specifier)



state 99

    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_declarator   (rule 99)
    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_type_specifier   (rule 101)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48

    parameter_declarator	go to state 185
    parameter_type_specifier	go to state 186
    type_specifier	go to state 98
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 100

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . type_info   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 113)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . type_info EQUAL initializer   (rule 114)

    LEFT_BRACKET	shift, and go to state 187
    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 188



state 101

    function_header  ->  fully_specified_type IDENTIFIER LEFT_PAREN .   (rule 92)

    $default	reduce using rule 92 (function_header)



state 102

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info EQUAL initializer   (rule 119)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 120)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    RIGHT_BRACKET	shift, and go to state 189
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 144
    constant_expression	go to state 190
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 103

    register_specifier  ->  COLON . REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 283)
    semantic  ->  COLON . IDENTIFIER   (rule 284)

    REGISTER	shift, and go to state 191
    IDENTIFIER	shift, and go to state 192



state 104

    annotation  ->  LEFT_ANGLE . RIGHT_ANGLE   (rule 246)
    annotation  ->  LEFT_ANGLE . annotation_list RIGHT_ANGLE   (rule 247)

    BOOL_TYPE	shift, and go to state 193
    FLOAT_TYPE	shift, and go to state 194
    INT_TYPE	shift, and go to state 195
    STRING_TYPE	shift, and go to state 196
    FIXED_TYPE	shift, and go to state 197
    HALF_TYPE	shift, and go to state 198
    BVEC2	shift, and go to state 199
    BVEC3	shift, and go to state 200
    BVEC4	shift, and go to state 201
    IVEC2	shift, and go to state 202
    IVEC3	shift, and go to state 203
    IVEC4	shift, and go to state 204
    VEC2	shift, and go to state 205
    VEC3	shift, and go to state 206
    VEC4	shift, and go to state 207
    HVEC2	shift, and go to state 208
    HVEC3	shift, and go to state 209
    HVEC4	shift, and go to state 210
    FVEC2	shift, and go to state 211
    FVEC3	shift, and go to state 212
    FVEC4	shift, and go to state 213
    RIGHT_ANGLE	shift, and go to state 214

    annotation_list	go to state 215
    annotation_item	go to state 216
    ann_type	go to state 217



state 105

    type_info  ->  annotation .   (rule 288)

    $default	reduce using rule 288 (type_info)



state 106

    type_info  ->  register_specifier .   (rule 287)
    type_info  ->  register_specifier . annotation   (rule 291)

    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 287 (type_info)

    annotation	go to state 218



state 107

    type_info  ->  semantic .   (rule 286)
    type_info  ->  semantic . annotation   (rule 289)
    type_info  ->  semantic . register_specifier   (rule 290)
    type_info  ->  semantic . register_specifier annotation   (rule 292)

    COLON	shift, and go to state 219
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 286 (type_info)

    annotation	go to state 220
    register_specifier	go to state 221



state 108

    single_declaration  ->  fully_specified_type IDENTIFIER type_info .   (rule 116)
    single_declaration  ->  fully_specified_type IDENTIFIER type_info . EQUAL initializer   (rule 121)

    EQUAL	shift, and go to state 222

    $default	reduce using rule 116 (single_declaration)



state 109

    variable_identifier  ->  IDENTIFIER .   (rule 1)
    function_identifier  ->  IDENTIFIER .   (rule 25)

    LEFT_PAREN	reduce using rule 25 (function_identifier)
    $default	reduce using rule 1 (variable_identifier)



state 110

    primary_expression  ->  FLOATCONSTANT .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 111

    primary_expression  ->  INTCONSTANT .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 112

    primary_expression  ->  BOOLCONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 113

    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    $default	reduce using rule 26 (function_identifier)



state 114

    unary_expression  ->  INC_OP . unary_expression   (rule 28)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 223
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 115

    unary_expression  ->  DEC_OP . unary_expression   (rule 29)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 224
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 116

    primary_expression  ->  LEFT_PAREN . expression RIGHT_PAREN   (rule 6)
    unary_expression  ->  LEFT_PAREN . type_specifier_nonarray RIGHT_PAREN unary_expression   (rule 31)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 225
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 226
    struct_specifier	go to state 61



state 117

    unary_operator  ->  BANG .   (rule 34)

    $default	reduce using rule 34 (unary_operator)



state 118

    unary_operator  ->  DASH .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 119

    unary_operator  ->  TILDE .   (rule 35)

    $default	reduce using rule 35 (unary_operator)



state 120

    unary_operator  ->  PLUS .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 121

    primary_expression  ->  variable_identifier .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 122

    postfix_expression  ->  primary_expression .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 123

    postfix_expression  ->  postfix_expression . LEFT_BRACKET integer_expression RIGHT_BRACKET   (rule 8)
    postfix_expression  ->  postfix_expression . DOT FIELD_SELECTION   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    function_call_or_method  ->  postfix_expression . DOT function_call_generic   (rule 16)
    unary_expression  ->  postfix_expression .   (rule 27)

    INC_OP	shift, and go to state 227
    DEC_OP	shift, and go to state 228
    LEFT_BRACKET	shift, and go to state 229
    DOT 	shift, and go to state 230

    $default	reduce using rule 27 (unary_expression)



state 124

    postfix_expression  ->  function_call .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 125

    function_call  ->  function_call_or_method .   (rule 14)

    $default	reduce using rule 14 (function_call)



state 126

    function_call_or_method  ->  function_call_generic .   (rule 15)

    $default	reduce using rule 15 (function_call_or_method)



state 127

    function_call_generic  ->  function_call_header_no_parameters . RIGHT_PAREN   (rule 18)

    RIGHT_PAREN	shift, and go to state 231



state 128

    function_call_generic  ->  function_call_header_with_parameters . RIGHT_PAREN   (rule 17)
    function_call_header_with_parameters  ->  function_call_header_with_parameters . COMMA assignment_expression   (rule 22)

    RIGHT_PAREN	shift, and go to state 232
    COMMA	shift, and go to state 233



state 129

    function_call_header_no_parameters  ->  function_call_header . VOID_TYPE   (rule 19)
    function_call_header_no_parameters  ->  function_call_header .   (rule 20)
    function_call_header_with_parameters  ->  function_call_header . assignment_expression   (rule 21)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 234
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    $default	reduce using rule 20 (function_call_header_no_parameters)

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 235
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 130

    function_call_header  ->  function_identifier . LEFT_PAREN   (rule 23)

    LEFT_PAREN	shift, and go to state 236



state 131

    multiplicative_expression  ->  unary_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 132

    unary_expression  ->  unary_operator . unary_expression   (rule 30)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 237
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 133

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  multiplicative_expression .   (rule 40)

    STAR	shift, and go to state 238
    SLASH	shift, and go to state 239
    PERCENT	shift, and go to state 240

    $default	reduce using rule 40 (additive_expression)



state 134

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  additive_expression .   (rule 43)

    DASH	shift, and go to state 241
    PLUS	shift, and go to state 242

    $default	reduce using rule 43 (shift_expression)



state 135

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 243
    RIGHT_OP	shift, and go to state 244

    $default	reduce using rule 46 (relational_expression)



state 136

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  relational_expression .   (rule 51)

    LE_OP	shift, and go to state 245
    GE_OP	shift, and go to state 246
    LEFT_ANGLE	shift, and go to state 247
    RIGHT_ANGLE	shift, and go to state 248

    $default	reduce using rule 51 (equality_expression)



state 137

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 249
    NE_OP	shift, and go to state 250

    $default	reduce using rule 54 (and_expression)



state 138

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 55)
    exclusive_or_expression  ->  and_expression .   (rule 56)

    AMPERSAND	shift, and go to state 251

    $default	reduce using rule 56 (exclusive_or_expression)



state 139

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 57)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 58)

    CARET	shift, and go to state 252

    $default	reduce using rule 58 (inclusive_or_expression)



state 140

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 59)
    logical_and_expression  ->  inclusive_or_expression .   (rule 60)

    VERTICAL_BAR	shift, and go to state 253

    $default	reduce using rule 60 (logical_and_expression)



state 141

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_xor_expression  ->  logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 254

    $default	reduce using rule 62 (logical_xor_expression)



state 142

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 63)
    logical_or_expression  ->  logical_xor_expression .   (rule 64)

    XOR_OP	shift, and go to state 255

    $default	reduce using rule 64 (logical_or_expression)



state 143

    logical_or_expression  ->  logical_or_expression . OR_OP logical_xor_expression   (rule 65)
    conditional_expression  ->  logical_or_expression .   (rule 66)
    conditional_expression  ->  logical_or_expression . QUESTION expression COLON assignment_expression   (rule 67)

    OR_OP	shift, and go to state 256
    QUESTION	shift, and go to state 257

    $default	reduce using rule 66 (conditional_expression)



state 144

    constant_expression  ->  conditional_expression .   (rule 83)

    $default	reduce using rule 83 (constant_expression)



state 145

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 131)

    RIGHT_BRACKET	shift, and go to state 258



state 146

    function_identifier  ->  type_specifier .   (rule 24)

    $default	reduce using rule 24 (function_identifier)



state 147

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 177)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 180)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    TYPE_NAME	shift, and go to state 48
    RIGHT_BRACE	shift, and go to state 259

    type_specifier	go to state 86
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    struct_declaration	go to state 152



state 148

    struct_declarator  ->  IDENTIFIER .   (rule 184)
    struct_declarator  ->  IDENTIFIER . COLON IDENTIFIER   (rule 185)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 186)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 187)

    LEFT_BRACKET	shift, and go to state 260
    COLON	shift, and go to state 261

    $default	reduce using rule 184 (struct_declarator)



state 149

    struct_declaration  ->  type_specifier struct_declarator_list . SEMICOLON   (rule 181)
    struct_declarator_list  ->  struct_declarator_list . COMMA struct_declarator   (rule 183)

    COMMA	shift, and go to state 262
    SEMICOLON	shift, and go to state 263



state 150

    struct_declarator_list  ->  struct_declarator .   (rule 182)

    $default	reduce using rule 182 (struct_declarator_list)



state 151

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 178)

    $default	reduce using rule 178 (struct_specifier)



state 152

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 180)

    $default	reduce using rule 180 (struct_declaration_list)



state 153

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 140)

    INTCONSTANT	shift, and go to state 264



state 154

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 138)

    INTCONSTANT	shift, and go to state 265



state 155

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA . INTCONSTANT RIGHT_ANGLE   (rule 139)

    INTCONSTANT	shift, and go to state 266



state 156

    jump_statement  ->  BREAK . SEMICOLON   (rule 229)

    SEMICOLON	shift, and go to state 267



state 157

    jump_statement  ->  CONTINUE . SEMICOLON   (rule 228)

    SEMICOLON	shift, and go to state 268



state 158

    iteration_statement  ->  DO . @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 219)

    $default	reduce using rule 218 (@4)

    @4  	go to state 269



state 159

    iteration_statement  ->  FOR . LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 221)

    LEFT_PAREN	shift, and go to state 270



state 160

    selection_statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN selection_rest_statement   (rule 211)

    LEFT_PAREN	shift, and go to state 271



state 161

    jump_statement  ->  DISCARD . SEMICOLON   (rule 232)

    SEMICOLON	shift, and go to state 272



state 162

    jump_statement  ->  RETURN . SEMICOLON   (rule 230)
    jump_statement  ->  RETURN . expression SEMICOLON   (rule 231)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    SEMICOLON	shift, and go to state 273
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 274
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 163

    iteration_statement  ->  WHILE . LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope   (rule 217)

    LEFT_PAREN	shift, and go to state 275



state 164

    compound_statement  ->  LEFT_BRACE . RIGHT_BRACE   (rule 199)
    compound_statement  ->  LEFT_BRACE . @1 statement_list @2 RIGHT_BRACE   (rule 202)

    RIGHT_BRACE	shift, and go to state 276

    $default	reduce using rule 200 (@1)

    @1  	go to state 277



state 165

    compound_statement_no_new_scope  ->  LEFT_BRACE RIGHT_BRACE .   (rule 205)

    $default	reduce using rule 205 (compound_statement_no_new_scope)



state 166

    expression_statement  ->  SEMICOLON .   (rule 209)

    $default	reduce using rule 209 (expression_statement)



state 167

    multiplicative_expression  ->  unary_expression .   (rule 36)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 69)

    MUL_ASSIGN	shift, and go to state 278
    DIV_ASSIGN	shift, and go to state 279
    ADD_ASSIGN	shift, and go to state 280
    MOD_ASSIGN	shift, and go to state 281
    LEFT_ASSIGN	shift, and go to state 282
    RIGHT_ASSIGN	shift, and go to state 283
    AND_ASSIGN	shift, and go to state 284
    XOR_ASSIGN	shift, and go to state 285
    OR_ASSIGN	shift, and go to state 286
    SUB_ASSIGN	shift, and go to state 287
    EQUAL	shift, and go to state 288

    $default	reduce using rule 36 (multiplicative_expression)

    assignment_operator	go to state 289



state 168

    assignment_expression  ->  conditional_expression .   (rule 68)

    $default	reduce using rule 68 (assignment_expression)



state 169

    expression  ->  assignment_expression .   (rule 81)

    $default	reduce using rule 81 (expression)



state 170

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    expression_statement  ->  expression . SEMICOLON   (rule 210)

    COMMA	shift, and go to state 290
    SEMICOLON	shift, and go to state 291



state 171

    declaration_statement  ->  declaration .   (rule 191)

    $default	reduce using rule 191 (declaration_statement)



state 172

    declaration  ->  function_prototype . SEMICOLON   (rule 84)

    SEMICOLON	shift, and go to state 69



state 173

    function_identifier  ->  type_specifier .   (rule 24)
    fully_specified_type  ->  type_specifier .   (rule 122)

    LEFT_PAREN	reduce using rule 24 (function_identifier)
    $default	reduce using rule 122 (fully_specified_type)



state 174

    simple_statement  ->  declaration_statement .   (rule 194)

    $default	reduce using rule 194 (simple_statement)



state 175

    statement_list  ->  statement .   (rule 207)

    $default	reduce using rule 207 (statement_list)



state 176

    statement  ->  simple_statement .   (rule 193)

    $default	reduce using rule 193 (statement)



state 177

    statement  ->  compound_statement .   (rule 192)

    $default	reduce using rule 192 (statement)



state 178

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list . RIGHT_BRACE   (rule 206)
    statement_list  ->  statement_list . statement   (rule 208)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    RIGHT_BRACE	shift, and go to state 292
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 293
    simple_statement	go to state 176
    compound_statement	go to state 177
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 179

    simple_statement  ->  expression_statement .   (rule 195)

    $default	reduce using rule 195 (simple_statement)



state 180

    simple_statement  ->  selection_statement .   (rule 196)

    $default	reduce using rule 196 (simple_statement)



state 181

    simple_statement  ->  iteration_statement .   (rule 197)

    $default	reduce using rule 197 (simple_statement)



state 182

    simple_statement  ->  jump_statement .   (rule 198)

    $default	reduce using rule 198 (simple_statement)



state 183

    function_prototype  ->  function_declarator RIGHT_PAREN COLON IDENTIFIER .   (rule 87)

    $default	reduce using rule 87 (function_prototype)



state 184

    parameter_declarator  ->  type_specifier IDENTIFIER .   (rule 93)
    parameter_declarator  ->  type_specifier IDENTIFIER . EQUAL initializer   (rule 94)
    parameter_declarator  ->  type_specifier IDENTIFIER . register_specifier   (rule 95)
    parameter_declarator  ->  type_specifier IDENTIFIER . COLON IDENTIFIER   (rule 96)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 97)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 98)

    LEFT_BRACKET	shift, and go to state 294
    COLON	shift, and go to state 295
    EQUAL	shift, and go to state 296

    $default	reduce using rule 93 (parameter_declarator)

    register_specifier	go to state 297



state 185

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_declarator .   (rule 99)

    $default	reduce using rule 99 (parameter_declaration)



state 186

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_type_specifier .   (rule 101)

    $default	reduce using rule 101 (parameter_declaration)



state 187

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET type_info EQUAL initializer   (rule 112)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET type_info EQUAL initializer   (rule 113)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    RIGHT_BRACKET	shift, and go to state 298
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 144
    constant_expression	go to state 299
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 188

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info .   (rule 109)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info . EQUAL initializer   (rule 114)

    EQUAL	shift, and go to state 300

    $default	reduce using rule 109 (init_declarator_list)



state 189

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info EQUAL initializer   (rule 119)

    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 301



state 190

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info EQUAL initializer   (rule 120)

    RIGHT_BRACKET	shift, and go to state 302



state 191

    register_specifier  ->  COLON REGISTER . LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 283)

    LEFT_PAREN	shift, and go to state 303



state 192

    semantic  ->  COLON IDENTIFIER .   (rule 284)

    $default	reduce using rule 284 (semantic)



state 193

    ann_type  ->  BOOL_TYPE .   (rule 255)

    $default	reduce using rule 255 (ann_type)



state 194

    ann_type  ->  FLOAT_TYPE .   (rule 251)

    $default	reduce using rule 251 (ann_type)



state 195

    ann_type  ->  INT_TYPE .   (rule 254)

    $default	reduce using rule 254 (ann_type)



state 196

    ann_type  ->  STRING_TYPE .   (rule 256)

    $default	reduce using rule 256 (ann_type)



state 197

    ann_type  ->  FIXED_TYPE .   (rule 253)

    $default	reduce using rule 253 (ann_type)



state 198

    ann_type  ->  HALF_TYPE .   (rule 252)

    $default	reduce using rule 252 (ann_type)



state 199

    ann_type  ->  BVEC2 .   (rule 257)

    $default	reduce using rule 257 (ann_type)



state 200

    ann_type  ->  BVEC3 .   (rule 258)

    $default	reduce using rule 258 (ann_type)



state 201

    ann_type  ->  BVEC4 .   (rule 259)

    $default	reduce using rule 259 (ann_type)



state 202

    ann_type  ->  IVEC2 .   (rule 260)

    $default	reduce using rule 260 (ann_type)



state 203

    ann_type  ->  IVEC3 .   (rule 261)

    $default	reduce using rule 261 (ann_type)



state 204

    ann_type  ->  IVEC4 .   (rule 262)

    $default	reduce using rule 262 (ann_type)



state 205

    ann_type  ->  VEC2 .   (rule 263)

    $default	reduce using rule 263 (ann_type)



state 206

    ann_type  ->  VEC3 .   (rule 264)

    $default	reduce using rule 264 (ann_type)



state 207

    ann_type  ->  VEC4 .   (rule 265)

    $default	reduce using rule 265 (ann_type)



state 208

    ann_type  ->  HVEC2 .   (rule 266)

    $default	reduce using rule 266 (ann_type)



state 209

    ann_type  ->  HVEC3 .   (rule 267)

    $default	reduce using rule 267 (ann_type)



state 210

    ann_type  ->  HVEC4 .   (rule 268)

    $default	reduce using rule 268 (ann_type)



state 211

    ann_type  ->  FVEC2 .   (rule 269)

    $default	reduce using rule 269 (ann_type)



state 212

    ann_type  ->  FVEC3 .   (rule 270)

    $default	reduce using rule 270 (ann_type)



state 213

    ann_type  ->  FVEC4 .   (rule 271)

    $default	reduce using rule 271 (ann_type)



state 214

    annotation  ->  LEFT_ANGLE RIGHT_ANGLE .   (rule 246)

    $default	reduce using rule 246 (annotation)



state 215

    annotation  ->  LEFT_ANGLE annotation_list . RIGHT_ANGLE   (rule 247)
    annotation_list  ->  annotation_list . annotation_item   (rule 249)

    BOOL_TYPE	shift, and go to state 193
    FLOAT_TYPE	shift, and go to state 194
    INT_TYPE	shift, and go to state 195
    STRING_TYPE	shift, and go to state 196
    FIXED_TYPE	shift, and go to state 197
    HALF_TYPE	shift, and go to state 198
    BVEC2	shift, and go to state 199
    BVEC3	shift, and go to state 200
    BVEC4	shift, and go to state 201
    IVEC2	shift, and go to state 202
    IVEC3	shift, and go to state 203
    IVEC4	shift, and go to state 204
    VEC2	shift, and go to state 205
    VEC3	shift, and go to state 206
    VEC4	shift, and go to state 207
    HVEC2	shift, and go to state 208
    HVEC3	shift, and go to state 209
    HVEC4	shift, and go to state 210
    FVEC2	shift, and go to state 211
    FVEC3	shift, and go to state 212
    FVEC4	shift, and go to state 213
    RIGHT_ANGLE	shift, and go to state 304

    annotation_item	go to state 305
    ann_type	go to state 217



state 216

    annotation_list  ->  annotation_item .   (rule 248)

    $default	reduce using rule 248 (annotation_list)



state 217

    annotation_item  ->  ann_type . IDENTIFIER EQUAL ann_literal SEMICOLON   (rule 250)

    IDENTIFIER	shift, and go to state 306



state 218

    type_info  ->  register_specifier annotation .   (rule 291)

    $default	reduce using rule 291 (type_info)



state 219

    register_specifier  ->  COLON . REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 283)

    REGISTER	shift, and go to state 191



state 220

    type_info  ->  semantic annotation .   (rule 289)

    $default	reduce using rule 289 (type_info)



state 221

    type_info  ->  semantic register_specifier .   (rule 290)
    type_info  ->  semantic register_specifier . annotation   (rule 292)

    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 290 (type_info)

    annotation	go to state 307



state 222

    single_declaration  ->  fully_specified_type IDENTIFIER type_info EQUAL . initializer   (rule 121)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 311
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 223

    unary_expression  ->  INC_OP unary_expression .   (rule 28)

    $default	reduce using rule 28 (unary_expression)



state 224

    unary_expression  ->  DEC_OP unary_expression .   (rule 29)

    $default	reduce using rule 29 (unary_expression)



state 225

    primary_expression  ->  LEFT_PAREN expression . RIGHT_PAREN   (rule 6)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    RIGHT_PAREN	shift, and go to state 314
    COMMA	shift, and go to state 290



state 226

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray . RIGHT_PAREN unary_expression   (rule 31)
    type_specifier  ->  type_specifier_nonarray .   (rule 130)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 131)

    RIGHT_PAREN	shift, and go to state 315
    LEFT_BRACKET	shift, and go to state 83

    $default	reduce using rule 130 (type_specifier)



state 227

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 228

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 229

    postfix_expression  ->  postfix_expression LEFT_BRACKET . integer_expression RIGHT_BRACKET   (rule 8)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    integer_expression	go to state 316
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 317
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 230

    postfix_expression  ->  postfix_expression DOT . FIELD_SELECTION   (rule 10)
    function_call_or_method  ->  postfix_expression DOT . function_call_generic   (rule 16)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 318
    TYPE_NAME	shift, and go to state 48
    FIELD_SELECTION	shift, and go to state 319

    function_call_generic	go to state 320
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 231

    function_call_generic  ->  function_call_header_no_parameters RIGHT_PAREN .   (rule 18)

    $default	reduce using rule 18 (function_call_generic)



state 232

    function_call_generic  ->  function_call_header_with_parameters RIGHT_PAREN .   (rule 17)

    $default	reduce using rule 17 (function_call_generic)



state 233

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA . assignment_expression   (rule 22)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 321
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 234

    function_call_header_no_parameters  ->  function_call_header VOID_TYPE .   (rule 19)
    type_specifier_nonarray  ->  VOID_TYPE .   (rule 132)

    RIGHT_PAREN	reduce using rule 19 (function_call_header_no_parameters)
    $default	reduce using rule 132 (type_specifier_nonarray)



state 235

    function_call_header_with_parameters  ->  function_call_header assignment_expression .   (rule 21)

    $default	reduce using rule 21 (function_call_header_with_parameters)



state 236

    function_call_header  ->  function_identifier LEFT_PAREN .   (rule 23)

    $default	reduce using rule 23 (function_call_header)



state 237

    unary_expression  ->  unary_operator unary_expression .   (rule 30)

    $default	reduce using rule 30 (unary_expression)



state 238

    multiplicative_expression  ->  multiplicative_expression STAR . unary_expression   (rule 37)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 322
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 239

    multiplicative_expression  ->  multiplicative_expression SLASH . unary_expression   (rule 38)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 323
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 240

    multiplicative_expression  ->  multiplicative_expression PERCENT . unary_expression   (rule 39)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 324
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 241

    additive_expression  ->  additive_expression DASH . multiplicative_expression   (rule 42)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 325
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 242

    additive_expression  ->  additive_expression PLUS . multiplicative_expression   (rule 41)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 326
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 243

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 44)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 327
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 244

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 45)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 328
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 245

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 49)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 329
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 246

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 50)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 330
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 247

    relational_expression  ->  relational_expression LEFT_ANGLE . shift_expression   (rule 47)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 331
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 248

    relational_expression  ->  relational_expression RIGHT_ANGLE . shift_expression   (rule 48)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 332
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 249

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 52)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 333
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 250

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 53)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 334
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 251

    and_expression  ->  and_expression AMPERSAND . equality_expression   (rule 55)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 335
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 252

    exclusive_or_expression  ->  exclusive_or_expression CARET . and_expression   (rule 57)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 336
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 253

    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR . exclusive_or_expression   (rule 59)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 337
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 254

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 61)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 338
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 255

    logical_xor_expression  ->  logical_xor_expression XOR_OP . logical_and_expression   (rule 63)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 339
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 256

    logical_or_expression  ->  logical_or_expression OR_OP . logical_xor_expression   (rule 65)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 340
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 257

    conditional_expression  ->  logical_or_expression QUESTION . expression COLON assignment_expression   (rule 67)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 341
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 258

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 131)

    $default	reduce using rule 131 (type_specifier)



state 259

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 177)

    $default	reduce using rule 177 (struct_specifier)



state 260

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 186)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 187)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 144
    constant_expression	go to state 342
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 261

    struct_declarator  ->  IDENTIFIER COLON . IDENTIFIER   (rule 185)

    IDENTIFIER	shift, and go to state 343



state 262

    struct_declarator_list  ->  struct_declarator_list COMMA . struct_declarator   (rule 183)

    IDENTIFIER	shift, and go to state 148

    struct_declarator	go to state 344



state 263

    struct_declaration  ->  type_specifier struct_declarator_list SEMICOLON .   (rule 181)

    $default	reduce using rule 181 (struct_declaration)



state 264

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 140)

    RIGHT_ANGLE	shift, and go to state 345



state 265

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 138)

    RIGHT_ANGLE	shift, and go to state 346



state 266

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT . RIGHT_ANGLE   (rule 139)

    RIGHT_ANGLE	shift, and go to state 347



state 267

    jump_statement  ->  BREAK SEMICOLON .   (rule 229)

    $default	reduce using rule 229 (jump_statement)



state 268

    jump_statement  ->  CONTINUE SEMICOLON .   (rule 228)

    $default	reduce using rule 228 (jump_statement)



state 269

    iteration_statement  ->  DO @4 . statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 219)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 348
    simple_statement	go to state 176
    compound_statement	go to state 177
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 270

    iteration_statement  ->  FOR LEFT_PAREN . @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 221)

    $default	reduce using rule 220 (@5)

    @5  	go to state 349



state 271

    selection_statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN selection_rest_statement   (rule 211)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 350
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 272

    jump_statement  ->  DISCARD SEMICOLON .   (rule 232)

    $default	reduce using rule 232 (jump_statement)



state 273

    jump_statement  ->  RETURN SEMICOLON .   (rule 230)

    $default	reduce using rule 230 (jump_statement)



state 274

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    jump_statement  ->  RETURN expression . SEMICOLON   (rule 231)

    COMMA	shift, and go to state 290
    SEMICOLON	shift, and go to state 351



state 275

    iteration_statement  ->  WHILE LEFT_PAREN . @3 condition RIGHT_PAREN statement_no_new_scope   (rule 217)

    $default	reduce using rule 216 (@3)

    @3  	go to state 352



state 276

    compound_statement  ->  LEFT_BRACE RIGHT_BRACE .   (rule 199)

    $default	reduce using rule 199 (compound_statement)



state 277

    compound_statement  ->  LEFT_BRACE @1 . statement_list @2 RIGHT_BRACE   (rule 202)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 175
    simple_statement	go to state 176
    compound_statement	go to state 177
    statement_list	go to state 353
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 278

    assignment_operator  ->  MUL_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 279

    assignment_operator  ->  DIV_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 280

    assignment_operator  ->  ADD_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 281

    assignment_operator  ->  MOD_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 282

    assignment_operator  ->  LEFT_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 283

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 284

    assignment_operator  ->  AND_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 285

    assignment_operator  ->  XOR_ASSIGN .   (rule 79)

    $default	reduce using rule 79 (assignment_operator)



state 286

    assignment_operator  ->  OR_ASSIGN .   (rule 80)

    $default	reduce using rule 80 (assignment_operator)



state 287

    assignment_operator  ->  SUB_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 288

    assignment_operator  ->  EQUAL .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 289

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 69)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 354
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 290

    expression  ->  expression COMMA . assignment_expression   (rule 82)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 355
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 291

    expression_statement  ->  expression SEMICOLON .   (rule 210)

    $default	reduce using rule 210 (expression_statement)



state 292

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list RIGHT_BRACE .   (rule 206)

    $default	reduce using rule 206 (compound_statement_no_new_scope)



state 293

    statement_list  ->  statement_list statement .   (rule 208)

    $default	reduce using rule 208 (statement_list)



state 294

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 97)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET COLON IDENTIFIER   (rule 98)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 131
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 144
    constant_expression	go to state 356
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 295

    parameter_declarator  ->  type_specifier IDENTIFIER COLON . IDENTIFIER   (rule 96)
    register_specifier  ->  COLON . REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN   (rule 283)

    REGISTER	shift, and go to state 191
    IDENTIFIER	shift, and go to state 357



state 296

    parameter_declarator  ->  type_specifier IDENTIFIER EQUAL . initializer   (rule 94)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 358
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 297

    parameter_declarator  ->  type_specifier IDENTIFIER register_specifier .   (rule 95)

    $default	reduce using rule 95 (parameter_declarator)



state 298

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . type_info EQUAL initializer   (rule 112)

    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 359



state 299

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET type_info EQUAL initializer   (rule 113)

    RIGHT_BRACKET	shift, and go to state 360



state 300

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info EQUAL . initializer   (rule 114)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 361
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 301

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info .   (rule 117)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info . EQUAL initializer   (rule 119)

    EQUAL	shift, and go to state 362

    $default	reduce using rule 117 (single_declaration)



state 302

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info EQUAL initializer   (rule 120)

    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 363



state 303

    register_specifier  ->  COLON REGISTER LEFT_PAREN . IDENTIFIER RIGHT_PAREN   (rule 283)

    IDENTIFIER	shift, and go to state 364



state 304

    annotation  ->  LEFT_ANGLE annotation_list RIGHT_ANGLE .   (rule 247)

    $default	reduce using rule 247 (annotation)



state 305

    annotation_list  ->  annotation_list annotation_item .   (rule 249)

    $default	reduce using rule 249 (annotation_list)



state 306

    annotation_item  ->  ann_type IDENTIFIER . EQUAL ann_literal SEMICOLON   (rule 250)

    EQUAL	shift, and go to state 365



state 307

    type_info  ->  semantic register_specifier annotation .   (rule 292)

    $default	reduce using rule 292 (type_info)



state 308

    sampler_initializer  ->  SAMPLERSTATE . LEFT_BRACE sampler_init_list RIGHT_BRACE   (rule 293)
    sampler_initializer  ->  SAMPLERSTATE . LEFT_BRACE RIGHT_BRACE   (rule 294)

    LEFT_BRACE	shift, and go to state 366



state 309

    initialization_list  ->  LEFT_BRACE . initializer_list RIGHT_BRACE   (rule 240)
    initialization_list  ->  LEFT_BRACE . initializer_list COMMA RIGHT_BRACE   (rule 241)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 367
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initialization_list	go to state 368
    initializer_list	go to state 369



state 310

    initializer  ->  assignment_expression .   (rule 188)

    $default	reduce using rule 188 (initializer)



state 311

    single_declaration  ->  fully_specified_type IDENTIFIER type_info EQUAL initializer .   (rule 121)

    $default	reduce using rule 121 (single_declaration)



state 312

    initializer  ->  initialization_list .   (rule 189)

    $default	reduce using rule 189 (initializer)



state 313

    initializer  ->  sampler_initializer .   (rule 190)

    $default	reduce using rule 190 (initializer)



state 314

    primary_expression  ->  LEFT_PAREN expression RIGHT_PAREN .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 315

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray RIGHT_PAREN . unary_expression   (rule 31)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 370
    unary_operator	go to state 132
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 316

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression . RIGHT_BRACKET   (rule 8)

    RIGHT_BRACKET	shift, and go to state 371



state 317

    integer_expression  ->  expression .   (rule 13)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    COMMA	shift, and go to state 290

    $default	reduce using rule 13 (integer_expression)



state 318

    function_identifier  ->  IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (function_identifier)



state 319

    postfix_expression  ->  postfix_expression DOT FIELD_SELECTION .   (rule 10)
    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    LEFT_PAREN	reduce using rule 26 (function_identifier)
    $default	reduce using rule 10 (postfix_expression)



state 320

    function_call_or_method  ->  postfix_expression DOT function_call_generic .   (rule 16)

    $default	reduce using rule 16 (function_call_or_method)



state 321

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA assignment_expression .   (rule 22)

    $default	reduce using rule 22 (function_call_header_with_parameters)



state 322

    multiplicative_expression  ->  multiplicative_expression STAR unary_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 323

    multiplicative_expression  ->  multiplicative_expression SLASH unary_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 324

    multiplicative_expression  ->  multiplicative_expression PERCENT unary_expression .   (rule 39)

    $default	reduce using rule 39 (multiplicative_expression)



state 325

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  additive_expression DASH multiplicative_expression .   (rule 42)

    STAR	shift, and go to state 238
    SLASH	shift, and go to state 239
    PERCENT	shift, and go to state 240

    $default	reduce using rule 42 (additive_expression)



state 326

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 39)
    additive_expression  ->  additive_expression PLUS multiplicative_expression .   (rule 41)

    STAR	shift, and go to state 238
    SLASH	shift, and go to state 239
    PERCENT	shift, and go to state 240

    $default	reduce using rule 41 (additive_expression)



state 327

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 44)

    DASH	shift, and go to state 241
    PLUS	shift, and go to state 242

    $default	reduce using rule 44 (shift_expression)



state 328

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 45)

    DASH	shift, and go to state 241
    PLUS	shift, and go to state 242

    $default	reduce using rule 45 (shift_expression)



state 329

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 243
    RIGHT_OP	shift, and go to state 244

    $default	reduce using rule 49 (relational_expression)



state 330

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 50)

    LEFT_OP	shift, and go to state 243
    RIGHT_OP	shift, and go to state 244

    $default	reduce using rule 50 (relational_expression)



state 331

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LEFT_ANGLE shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 243
    RIGHT_OP	shift, and go to state 244

    $default	reduce using rule 47 (relational_expression)



state 332

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression RIGHT_ANGLE shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 243
    RIGHT_OP	shift, and go to state 244

    $default	reduce using rule 48 (relational_expression)



state 333

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 245
    GE_OP	shift, and go to state 246
    LEFT_ANGLE	shift, and go to state 247
    RIGHT_ANGLE	shift, and go to state 248

    $default	reduce using rule 52 (equality_expression)



state 334

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 53)

    LE_OP	shift, and go to state 245
    GE_OP	shift, and go to state 246
    LEFT_ANGLE	shift, and go to state 247
    RIGHT_ANGLE	shift, and go to state 248

    $default	reduce using rule 53 (equality_expression)



state 335

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  and_expression AMPERSAND equality_expression .   (rule 55)

    EQ_OP	shift, and go to state 249
    NE_OP	shift, and go to state 250

    $default	reduce using rule 55 (and_expression)



state 336

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 55)
    exclusive_or_expression  ->  exclusive_or_expression CARET and_expression .   (rule 57)

    AMPERSAND	shift, and go to state 251

    $default	reduce using rule 57 (exclusive_or_expression)



state 337

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 57)
    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR exclusive_or_expression .   (rule 59)

    CARET	shift, and go to state 252

    $default	reduce using rule 59 (inclusive_or_expression)



state 338

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 59)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 61)

    VERTICAL_BAR	shift, and go to state 253

    $default	reduce using rule 61 (logical_and_expression)



state 339

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_xor_expression  ->  logical_xor_expression XOR_OP logical_and_expression .   (rule 63)

    AND_OP	shift, and go to state 254

    $default	reduce using rule 63 (logical_xor_expression)



state 340

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 63)
    logical_or_expression  ->  logical_or_expression OR_OP logical_xor_expression .   (rule 65)

    XOR_OP	shift, and go to state 255

    $default	reduce using rule 65 (logical_or_expression)



state 341

    conditional_expression  ->  logical_or_expression QUESTION expression . COLON assignment_expression   (rule 67)
    expression  ->  expression . COMMA assignment_expression   (rule 82)

    COMMA	shift, and go to state 290
    COLON	shift, and go to state 372



state 342

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 186)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET COLON IDENTIFIER   (rule 187)

    RIGHT_BRACKET	shift, and go to state 373



state 343

    struct_declarator  ->  IDENTIFIER COLON IDENTIFIER .   (rule 185)

    $default	reduce using rule 185 (struct_declarator)



state 344

    struct_declarator_list  ->  struct_declarator_list COMMA struct_declarator .   (rule 183)

    $default	reduce using rule 183 (struct_declarator_list)



state 345

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE BOOL_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 140)

    $default	reduce using rule 140 (type_specifier_nonarray)



state 346

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE FLOAT_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 138)

    $default	reduce using rule 138 (type_specifier_nonarray)



state 347

    type_specifier_nonarray  ->  VECTOR LEFT_ANGLE INT_TYPE COMMA INTCONSTANT RIGHT_ANGLE .   (rule 139)

    $default	reduce using rule 139 (type_specifier_nonarray)



state 348

    iteration_statement  ->  DO @4 statement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 219)

    WHILE	shift, and go to state 374



state 349

    iteration_statement  ->  FOR LEFT_PAREN @5 . for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 221)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 375
    expression_statement	go to state 376
    for_init_statement	go to state 377



state 350

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    selection_statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN selection_rest_statement   (rule 211)

    RIGHT_PAREN	shift, and go to state 378
    COMMA	shift, and go to state 290



state 351

    jump_statement  ->  RETURN expression SEMICOLON .   (rule 231)

    $default	reduce using rule 231 (jump_statement)



state 352

    iteration_statement  ->  WHILE LEFT_PAREN @3 . condition RIGHT_PAREN statement_no_new_scope   (rule 217)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 379
    fully_specified_type	go to state 380
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    condition	go to state 381



state 353

    compound_statement  ->  LEFT_BRACE @1 statement_list . @2 RIGHT_BRACE   (rule 202)
    statement_list  ->  statement_list . statement   (rule 208)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    $default	reduce using rule 201 (@2)

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 293
    simple_statement	go to state 176
    compound_statement	go to state 177
    @2  	go to state 382
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 354

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 69)

    $default	reduce using rule 69 (assignment_expression)



state 355

    expression  ->  expression COMMA assignment_expression .   (rule 82)

    $default	reduce using rule 82 (expression)



state 356

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 97)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET COLON IDENTIFIER   (rule 98)

    RIGHT_BRACKET	shift, and go to state 383



state 357

    parameter_declarator  ->  type_specifier IDENTIFIER COLON IDENTIFIER .   (rule 96)

    $default	reduce using rule 96 (parameter_declarator)



state 358

    parameter_declarator  ->  type_specifier IDENTIFIER EQUAL initializer .   (rule 94)

    $default	reduce using rule 94 (parameter_declarator)



state 359

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info .   (rule 110)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info . EQUAL initializer   (rule 112)

    EQUAL	shift, and go to state 384

    $default	reduce using rule 110 (init_declarator_list)



state 360

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . type_info EQUAL initializer   (rule 113)

    COLON	shift, and go to state 103
    LEFT_ANGLE	shift, and go to state 104

    $default	reduce using rule 285 (type_info)

    annotation	go to state 105
    register_specifier	go to state 106
    semantic	go to state 107
    type_info	go to state 385



state 361

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER type_info EQUAL initializer .   (rule 114)

    $default	reduce using rule 114 (init_declarator_list)



state 362

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL . initializer   (rule 119)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 386
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 363

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info .   (rule 118)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info . EQUAL initializer   (rule 120)

    EQUAL	shift, and go to state 387

    $default	reduce using rule 118 (single_declaration)



state 364

    register_specifier  ->  COLON REGISTER LEFT_PAREN IDENTIFIER . RIGHT_PAREN   (rule 283)

    RIGHT_PAREN	shift, and go to state 388



state 365

    annotation_item  ->  ann_type IDENTIFIER EQUAL . ann_literal SEMICOLON   (rule 250)

    BOOL_TYPE	shift, and go to state 193
    FLOAT_TYPE	shift, and go to state 194
    INT_TYPE	shift, and go to state 195
    STRING_TYPE	shift, and go to state 196
    FIXED_TYPE	shift, and go to state 197
    HALF_TYPE	shift, and go to state 198
    BVEC2	shift, and go to state 199
    BVEC3	shift, and go to state 200
    BVEC4	shift, and go to state 201
    IVEC2	shift, and go to state 202
    IVEC3	shift, and go to state 203
    IVEC4	shift, and go to state 204
    VEC2	shift, and go to state 205
    VEC3	shift, and go to state 206
    VEC4	shift, and go to state 207
    HVEC2	shift, and go to state 208
    HVEC3	shift, and go to state 209
    HVEC4	shift, and go to state 210
    FVEC2	shift, and go to state 211
    FVEC3	shift, and go to state 212
    FVEC4	shift, and go to state 213
    FLOATCONSTANT	shift, and go to state 389
    INTCONSTANT	shift, and go to state 390
    BOOLCONSTANT	shift, and go to state 391
    STRINGCONSTANT	shift, and go to state 392
    LEFT_BRACE	shift, and go to state 393

    ann_type	go to state 394
    ann_literal	go to state 395
    ann_numerical_constant	go to state 396
    ann_literal_constructor	go to state 397
    ann_literal_init_list	go to state 398



state 366

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE . sampler_init_list RIGHT_BRACE   (rule 293)
    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE . RIGHT_BRACE   (rule 294)

    TEXTURE	shift, and go to state 399
    IDENTIFIER	shift, and go to state 400
    RIGHT_BRACE	shift, and go to state 401

    sampler_init_list	go to state 402
    sampler_init_item	go to state 403



state 367

    initializer_list  ->  assignment_expression .   (rule 242)

    $default	reduce using rule 242 (initializer_list)



state 368

    initializer_list  ->  initialization_list .   (rule 243)

    $default	reduce using rule 243 (initializer_list)



state 369

    initialization_list  ->  LEFT_BRACE initializer_list . RIGHT_BRACE   (rule 240)
    initialization_list  ->  LEFT_BRACE initializer_list . COMMA RIGHT_BRACE   (rule 241)
    initializer_list  ->  initializer_list . COMMA assignment_expression   (rule 244)
    initializer_list  ->  initializer_list . COMMA initialization_list   (rule 245)

    RIGHT_BRACE	shift, and go to state 404
    COMMA	shift, and go to state 405



state 370

    unary_expression  ->  LEFT_PAREN type_specifier_nonarray RIGHT_PAREN unary_expression .   (rule 31)

    $default	reduce using rule 31 (unary_expression)



state 371

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 372

    conditional_expression  ->  logical_or_expression QUESTION expression COLON . assignment_expression   (rule 67)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 406
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 373

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 186)
    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . COLON IDENTIFIER   (rule 187)

    COLON	shift, and go to state 407

    $default	reduce using rule 186 (struct_declarator)



state 374

    iteration_statement  ->  DO @4 statement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 219)

    LEFT_PAREN	shift, and go to state 408



state 375

    for_init_statement  ->  declaration_statement .   (rule 223)

    $default	reduce using rule 223 (for_init_statement)



state 376

    for_init_statement  ->  expression_statement .   (rule 222)

    $default	reduce using rule 222 (for_init_statement)



state 377

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement . for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 221)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    $default	reduce using rule 225 (conditionopt)

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 379
    fully_specified_type	go to state 380
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    condition	go to state 409
    conditionopt	go to state 410
    for_rest_statement	go to state 411



state 378

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . selection_rest_statement   (rule 211)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 412
    simple_statement	go to state 176
    compound_statement	go to state 177
    expression_statement	go to state 179
    selection_statement	go to state 180
    selection_rest_statement	go to state 413
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 379

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    condition  ->  expression .   (rule 214)

    COMMA	shift, and go to state 290

    $default	reduce using rule 214 (condition)



state 380

    condition  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 215)

    IDENTIFIER	shift, and go to state 414



state 381

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition . RIGHT_PAREN statement_no_new_scope   (rule 217)

    RIGHT_PAREN	shift, and go to state 415



state 382

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 . RIGHT_BRACE   (rule 202)

    RIGHT_BRACE	shift, and go to state 416



state 383

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 97)
    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . COLON IDENTIFIER   (rule 98)

    COLON	shift, and go to state 417

    $default	reduce using rule 97 (parameter_declarator)



state 384

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL . initializer   (rule 112)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 418
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 385

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info .   (rule 111)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info . EQUAL initializer   (rule 113)

    EQUAL	shift, and go to state 419

    $default	reduce using rule 111 (init_declarator_list)



state 386

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer .   (rule 119)

    $default	reduce using rule 119 (single_declaration)



state 387

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL . initializer   (rule 120)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 420
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 388

    register_specifier  ->  COLON REGISTER LEFT_PAREN IDENTIFIER RIGHT_PAREN .   (rule 283)

    $default	reduce using rule 283 (register_specifier)



state 389

    ann_numerical_constant  ->  FLOATCONSTANT .   (rule 278)

    $default	reduce using rule 278 (ann_numerical_constant)



state 390

    ann_numerical_constant  ->  INTCONSTANT .   (rule 276)

    $default	reduce using rule 276 (ann_numerical_constant)



state 391

    ann_numerical_constant  ->  BOOLCONSTANT .   (rule 277)

    $default	reduce using rule 277 (ann_numerical_constant)



state 392

    ann_literal  ->  STRINGCONSTANT .   (rule 273)

    $default	reduce using rule 273 (ann_literal)



state 393

    ann_literal_init_list  ->  LEFT_BRACE . ann_value_list RIGHT_BRACE   (rule 282)

    FLOATCONSTANT	shift, and go to state 389
    INTCONSTANT	shift, and go to state 390
    BOOLCONSTANT	shift, and go to state 391

    ann_numerical_constant	go to state 421
    ann_value_list	go to state 422



state 394

    ann_literal_constructor  ->  ann_type . LEFT_PAREN ann_value_list RIGHT_PAREN   (rule 279)

    LEFT_PAREN	shift, and go to state 423



state 395

    annotation_item  ->  ann_type IDENTIFIER EQUAL ann_literal . SEMICOLON   (rule 250)

    SEMICOLON	shift, and go to state 424



state 396

    ann_literal  ->  ann_numerical_constant .   (rule 272)

    $default	reduce using rule 272 (ann_literal)



state 397

    ann_literal  ->  ann_literal_constructor .   (rule 274)

    $default	reduce using rule 274 (ann_literal)



state 398

    ann_literal  ->  ann_literal_init_list .   (rule 275)

    $default	reduce using rule 275 (ann_literal)



state 399

    sampler_init_item  ->  TEXTURE . EQUAL IDENTIFIER SEMICOLON   (rule 300)
    sampler_init_item  ->  TEXTURE . EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 301)
    sampler_init_item  ->  TEXTURE . EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 302)

    EQUAL	shift, and go to state 425



state 400

    sampler_init_item  ->  IDENTIFIER . EQUAL IDENTIFIER SEMICOLON   (rule 297)
    sampler_init_item  ->  IDENTIFIER . EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 298)
    sampler_init_item  ->  IDENTIFIER . EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 299)

    EQUAL	shift, and go to state 426



state 401

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE RIGHT_BRACE .   (rule 294)

    $default	reduce using rule 294 (sampler_initializer)



state 402

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE sampler_init_list . RIGHT_BRACE   (rule 293)
    sampler_init_list  ->  sampler_init_list . sampler_init_item   (rule 296)

    TEXTURE	shift, and go to state 399
    IDENTIFIER	shift, and go to state 400
    RIGHT_BRACE	shift, and go to state 427

    sampler_init_item	go to state 428



state 403

    sampler_init_list  ->  sampler_init_item .   (rule 295)

    $default	reduce using rule 295 (sampler_init_list)



state 404

    initialization_list  ->  LEFT_BRACE initializer_list RIGHT_BRACE .   (rule 240)

    $default	reduce using rule 240 (initialization_list)



state 405

    initialization_list  ->  LEFT_BRACE initializer_list COMMA . RIGHT_BRACE   (rule 241)
    initializer_list  ->  initializer_list COMMA . assignment_expression   (rule 244)
    initializer_list  ->  initializer_list COMMA . initialization_list   (rule 245)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    RIGHT_BRACE	shift, and go to state 429
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 430
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initialization_list	go to state 431



state 406

    conditional_expression  ->  logical_or_expression QUESTION expression COLON assignment_expression .   (rule 67)

    $default	reduce using rule 67 (conditional_expression)



state 407

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON . IDENTIFIER   (rule 187)

    IDENTIFIER	shift, and go to state 432



state 408

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMICOLON   (rule 219)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 433
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 409

    conditionopt  ->  condition .   (rule 224)

    $default	reduce using rule 224 (conditionopt)



state 410

    for_rest_statement  ->  conditionopt . SEMICOLON   (rule 226)
    for_rest_statement  ->  conditionopt . SEMICOLON expression   (rule 227)

    SEMICOLON	shift, and go to state 434



state 411

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement . RIGHT_PAREN statement_no_new_scope   (rule 221)

    RIGHT_PAREN	shift, and go to state 435



state 412

    selection_rest_statement  ->  statement . ELSE statement   (rule 212)
    selection_rest_statement  ->  statement .   (rule 213)

    ELSE	shift, and go to state 436

    ELSE	[reduce using rule 213 (selection_rest_statement)]
    $default	reduce using rule 213 (selection_rest_statement)



state 413

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement .   (rule 211)

    $default	reduce using rule 211 (selection_statement)



state 414

    condition  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 215)

    EQUAL	shift, and go to state 437



state 415

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN . statement_no_new_scope   (rule 217)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 92
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    simple_statement	go to state 438
    statement_no_new_scope	go to state 439
    compound_statement_no_new_scope	go to state 440
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 416

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 RIGHT_BRACE .   (rule 202)

    $default	reduce using rule 202 (compound_statement)



state 417

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON . IDENTIFIER   (rule 98)

    IDENTIFIER	shift, and go to state 441



state 418

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET type_info EQUAL initializer .   (rule 112)

    $default	reduce using rule 112 (init_declarator_list)



state 419

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL . initializer   (rule 113)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 442
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 420

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer .   (rule 120)

    $default	reduce using rule 120 (single_declaration)



state 421

    ann_value_list  ->  ann_numerical_constant .   (rule 280)

    $default	reduce using rule 280 (ann_value_list)



state 422

    ann_value_list  ->  ann_value_list . COMMA ann_numerical_constant   (rule 281)
    ann_literal_init_list  ->  LEFT_BRACE ann_value_list . RIGHT_BRACE   (rule 282)

    RIGHT_BRACE	shift, and go to state 443
    COMMA	shift, and go to state 444



state 423

    ann_literal_constructor  ->  ann_type LEFT_PAREN . ann_value_list RIGHT_PAREN   (rule 279)

    FLOATCONSTANT	shift, and go to state 389
    INTCONSTANT	shift, and go to state 390
    BOOLCONSTANT	shift, and go to state 391

    ann_numerical_constant	go to state 421
    ann_value_list	go to state 445



state 424

    annotation_item  ->  ann_type IDENTIFIER EQUAL ann_literal SEMICOLON .   (rule 250)

    $default	reduce using rule 250 (annotation_item)



state 425

    sampler_init_item  ->  TEXTURE EQUAL . IDENTIFIER SEMICOLON   (rule 300)
    sampler_init_item  ->  TEXTURE EQUAL . LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 301)
    sampler_init_item  ->  TEXTURE EQUAL . LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 302)

    IDENTIFIER	shift, and go to state 446
    LEFT_PAREN	shift, and go to state 447
    LEFT_ANGLE	shift, and go to state 448



state 426

    sampler_init_item  ->  IDENTIFIER EQUAL . IDENTIFIER SEMICOLON   (rule 297)
    sampler_init_item  ->  IDENTIFIER EQUAL . LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 298)
    sampler_init_item  ->  IDENTIFIER EQUAL . LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 299)

    IDENTIFIER	shift, and go to state 449
    LEFT_PAREN	shift, and go to state 450
    LEFT_ANGLE	shift, and go to state 451



state 427

    sampler_initializer  ->  SAMPLERSTATE LEFT_BRACE sampler_init_list RIGHT_BRACE .   (rule 293)

    $default	reduce using rule 293 (sampler_initializer)



state 428

    sampler_init_list  ->  sampler_init_list sampler_init_item .   (rule 296)

    $default	reduce using rule 296 (sampler_init_list)



state 429

    initialization_list  ->  LEFT_BRACE initializer_list COMMA RIGHT_BRACE .   (rule 241)

    $default	reduce using rule 241 (initialization_list)



state 430

    initializer_list  ->  initializer_list COMMA assignment_expression .   (rule 244)

    $default	reduce using rule 244 (initializer_list)



state 431

    initializer_list  ->  initializer_list COMMA initialization_list .   (rule 245)

    $default	reduce using rule 245 (initializer_list)



state 432

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER .   (rule 187)

    $default	reduce using rule 187 (struct_declarator)



state 433

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMICOLON   (rule 219)

    RIGHT_PAREN	shift, and go to state 452
    COMMA	shift, and go to state 290



state 434

    for_rest_statement  ->  conditionopt SEMICOLON .   (rule 226)
    for_rest_statement  ->  conditionopt SEMICOLON . expression   (rule 227)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    $default	reduce using rule 226 (for_rest_statement)

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 453
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61



state 435

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN . statement_no_new_scope   (rule 221)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 92
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    simple_statement	go to state 438
    statement_no_new_scope	go to state 454
    compound_statement_no_new_scope	go to state 440
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 436

    selection_rest_statement  ->  statement ELSE . statement   (rule 212)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    STATIC_QUAL	shift, and go to state 3
    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BREAK	shift, and go to state 156
    CONTINUE	shift, and go to state 157
    DO  	shift, and go to state 158
    FOR 	shift, and go to state 159
    IF  	shift, and go to state 160
    DISCARD	shift, and go to state 161
    RETURN	shift, and go to state 162
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    UNIFORM	shift, and go to state 33
    VARYING	shift, and go to state 34
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    WHILE	shift, and go to state 163
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 164
    SEMICOLON	shift, and go to state 166
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 169
    expression	go to state 170
    declaration	go to state 171
    function_prototype	go to state 172
    function_declarator	go to state 52
    function_header_with_parameters	go to state 53
    function_header	go to state 54
    init_declarator_list	go to state 55
    single_declaration	go to state 56
    fully_specified_type	go to state 57
    type_qualifier	go to state 58
    type_specifier	go to state 173
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    declaration_statement	go to state 174
    statement	go to state 455
    simple_statement	go to state 176
    compound_statement	go to state 177
    expression_statement	go to state 179
    selection_statement	go to state 180
    iteration_statement	go to state 181
    jump_statement	go to state 182



state 437

    condition  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 215)

    BOOL_TYPE	shift, and go to state 4
    FLOAT_TYPE	shift, and go to state 5
    INT_TYPE	shift, and go to state 6
    FIXED_TYPE	shift, and go to state 7
    HALF_TYPE	shift, and go to state 8
    BVEC2	shift, and go to state 9
    BVEC3	shift, and go to state 10
    BVEC4	shift, and go to state 11
    IVEC2	shift, and go to state 12
    IVEC3	shift, and go to state 13
    IVEC4	shift, and go to state 14
    VEC2	shift, and go to state 15
    VEC3	shift, and go to state 16
    VEC4	shift, and go to state 17
    HVEC2	shift, and go to state 18
    HVEC3	shift, and go to state 19
    HVEC4	shift, and go to state 20
    FVEC2	shift, and go to state 21
    FVEC3	shift, and go to state 22
    FVEC4	shift, and go to state 23
    MATRIX2	shift, and go to state 24
    MATRIX3	shift, and go to state 25
    MATRIX4	shift, and go to state 26
    HMATRIX2	shift, and go to state 27
    HMATRIX3	shift, and go to state 28
    HMATRIX4	shift, and go to state 29
    FMATRIX2	shift, and go to state 30
    FMATRIX3	shift, and go to state 31
    FMATRIX4	shift, and go to state 32
    STRUCT	shift, and go to state 35
    VOID_TYPE	shift, and go to state 36
    SAMPLER1D	shift, and go to state 37
    SAMPLER2D	shift, and go to state 38
    SAMPLER3D	shift, and go to state 39
    SAMPLERCUBE	shift, and go to state 40
    SAMPLER1DSHADOW	shift, and go to state 41
    SAMPLER2DSHADOW	shift, and go to state 42
    SAMPLERRECTSHADOW	shift, and go to state 43
    SAMPLERRECT	shift, and go to state 44
    SAMPLERGENERIC	shift, and go to state 45
    VECTOR	shift, and go to state 46
    TEXTURE	shift, and go to state 47
    SAMPLERSTATE	shift, and go to state 308
    IDENTIFIER	shift, and go to state 109
    TYPE_NAME	shift, and go to state 48
    FLOATCONSTANT	shift, and go to state 110
    INTCONSTANT	shift, and go to state 111
    BOOLCONSTANT	shift, and go to state 112
    FIELD_SELECTION	shift, and go to state 113
    INC_OP	shift, and go to state 114
    DEC_OP	shift, and go to state 115
    LEFT_PAREN	shift, and go to state 116
    LEFT_BRACE	shift, and go to state 309
    BANG	shift, and go to state 117
    DASH	shift, and go to state 118
    TILDE	shift, and go to state 119
    PLUS	shift, and go to state 120

    variable_identifier	go to state 121
    primary_expression	go to state 122
    postfix_expression	go to state 123
    function_call	go to state 124
    function_call_or_method	go to state 125
    function_call_generic	go to state 126
    function_call_header_no_parameters	go to state 127
    function_call_header_with_parameters	go to state 128
    function_call_header	go to state 129
    function_identifier	go to state 130
    unary_expression	go to state 167
    unary_operator	go to state 132
    multiplicative_expression	go to state 133
    additive_expression	go to state 134
    shift_expression	go to state 135
    relational_expression	go to state 136
    equality_expression	go to state 137
    and_expression	go to state 138
    exclusive_or_expression	go to state 139
    inclusive_or_expression	go to state 140
    logical_and_expression	go to state 141
    logical_xor_expression	go to state 142
    logical_or_expression	go to state 143
    conditional_expression	go to state 168
    assignment_expression	go to state 310
    type_specifier	go to state 146
    type_specifier_nonarray	go to state 60
    struct_specifier	go to state 61
    initializer	go to state 456
    initialization_list	go to state 312
    sampler_initializer	go to state 313



state 438

    statement_no_new_scope  ->  simple_statement .   (rule 204)

    $default	reduce using rule 204 (statement_no_new_scope)



state 439

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope .   (rule 217)

    $default	reduce using rule 217 (iteration_statement)



state 440

    statement_no_new_scope  ->  compound_statement_no_new_scope .   (rule 203)

    $default	reduce using rule 203 (statement_no_new_scope)



state 441

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET COLON IDENTIFIER .   (rule 98)

    $default	reduce using rule 98 (parameter_declarator)



state 442

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET type_info EQUAL initializer .   (rule 113)

    $default	reduce using rule 113 (init_declarator_list)



state 443

    ann_literal_init_list  ->  LEFT_BRACE ann_value_list RIGHT_BRACE .   (rule 282)

    $default	reduce using rule 282 (ann_literal_init_list)



state 444

    ann_value_list  ->  ann_value_list COMMA . ann_numerical_constant   (rule 281)

    FLOATCONSTANT	shift, and go to state 389
    INTCONSTANT	shift, and go to state 390
    BOOLCONSTANT	shift, and go to state 391

    ann_numerical_constant	go to state 457



state 445

    ann_literal_constructor  ->  ann_type LEFT_PAREN ann_value_list . RIGHT_PAREN   (rule 279)
    ann_value_list  ->  ann_value_list . COMMA ann_numerical_constant   (rule 281)

    RIGHT_PAREN	shift, and go to state 458
    COMMA	shift, and go to state 444



state 446

    sampler_init_item  ->  TEXTURE EQUAL IDENTIFIER . SEMICOLON   (rule 300)

    SEMICOLON	shift, and go to state 459



state 447

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN . IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 302)

    IDENTIFIER	shift, and go to state 460



state 448

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE . IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 301)

    IDENTIFIER	shift, and go to state 461



state 449

    sampler_init_item  ->  IDENTIFIER EQUAL IDENTIFIER . SEMICOLON   (rule 297)

    SEMICOLON	shift, and go to state 462



state 450

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN . IDENTIFIER RIGHT_PAREN SEMICOLON   (rule 299)

    IDENTIFIER	shift, and go to state 463



state 451

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE . IDENTIFIER RIGHT_ANGLE SEMICOLON   (rule 298)

    IDENTIFIER	shift, and go to state 464



state 452

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMICOLON   (rule 219)

    SEMICOLON	shift, and go to state 465



state 453

    expression  ->  expression . COMMA assignment_expression   (rule 82)
    for_rest_statement  ->  conditionopt SEMICOLON expression .   (rule 227)

    COMMA	shift, and go to state 290

    $default	reduce using rule 227 (for_rest_statement)



state 454

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope .   (rule 221)

    $default	reduce using rule 221 (iteration_statement)



state 455

    selection_rest_statement  ->  statement ELSE statement .   (rule 212)

    $default	reduce using rule 212 (selection_rest_statement)



state 456

    condition  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 215)

    $default	reduce using rule 215 (condition)



state 457

    ann_value_list  ->  ann_value_list COMMA ann_numerical_constant .   (rule 281)

    $default	reduce using rule 281 (ann_value_list)



state 458

    ann_literal_constructor  ->  ann_type LEFT_PAREN ann_value_list RIGHT_PAREN .   (rule 279)

    $default	reduce using rule 279 (ann_literal_constructor)



state 459

    sampler_init_item  ->  TEXTURE EQUAL IDENTIFIER SEMICOLON .   (rule 300)

    $default	reduce using rule 300 (sampler_init_item)



state 460

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER . RIGHT_PAREN SEMICOLON   (rule 302)

    RIGHT_PAREN	shift, and go to state 466



state 461

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER . RIGHT_ANGLE SEMICOLON   (rule 301)

    RIGHT_ANGLE	shift, and go to state 467



state 462

    sampler_init_item  ->  IDENTIFIER EQUAL IDENTIFIER SEMICOLON .   (rule 297)

    $default	reduce using rule 297 (sampler_init_item)



state 463

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER . RIGHT_PAREN SEMICOLON   (rule 299)

    RIGHT_PAREN	shift, and go to state 468



state 464

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER . RIGHT_ANGLE SEMICOLON   (rule 298)

    RIGHT_ANGLE	shift, and go to state 469



state 465

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON .   (rule 219)

    $default	reduce using rule 219 (iteration_statement)



state 466

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN . SEMICOLON   (rule 302)

    SEMICOLON	shift, and go to state 470



state 467

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE . SEMICOLON   (rule 301)

    SEMICOLON	shift, and go to state 471



state 468

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN . SEMICOLON   (rule 299)

    SEMICOLON	shift, and go to state 472



state 469

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE . SEMICOLON   (rule 298)

    SEMICOLON	shift, and go to state 473



state 470

    sampler_init_item  ->  TEXTURE EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON .   (rule 302)

    $default	reduce using rule 302 (sampler_init_item)



state 471

    sampler_init_item  ->  TEXTURE EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON .   (rule 301)

    $default	reduce using rule 301 (sampler_init_item)



state 472

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_PAREN IDENTIFIER RIGHT_PAREN SEMICOLON .   (rule 299)

    $default	reduce using rule 299 (sampler_init_item)



state 473

    sampler_init_item  ->  IDENTIFIER EQUAL LEFT_ANGLE IDENTIFIER RIGHT_ANGLE SEMICOLON .   (rule 298)

    $default	reduce using rule 298 (sampler_init_item)



state 474

    $   	go to state 475



state 475

    $default	accept
